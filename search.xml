<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Unicorn之模拟调用so文件</title>
    <url>/2021/06/03/Unicorn/</url>
    <content><![CDATA[<h3 id="一、Unicorn中的接口"><a href="#一、Unicorn中的接口" class="headerlink" title="一、Unicorn中的接口"></a>一、Unicorn中的接口</h3><h5 id="1、内存相关"><a href="#1、内存相关" class="headerlink" title="1、内存相关"></a>1、内存相关</h5><ul>
<li>  uc_mem_map</li>
<li>  uc_mem_write</li>
<li>  uc_mem_read</li>
</ul>
<h5 id="2、寄存器相关"><a href="#2、寄存器相关" class="headerlink" title="2、寄存器相关"></a>2、寄存器相关</h5><ul>
<li>  uc_reg_write</li>
<li>  uc_reg_read</li>
</ul>
<p><strong>TEST</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> unicorn</span><br><span class="line"><span class="keyword">import</span> capstone</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Test_Arm32_Thumb</span>():</span></span><br><span class="line">    <span class="comment">#硬编码</span></span><br><span class="line">    CODE = <span class="string">b&#x27;\x0a\x46\x03\x46&#x27;</span></span><br><span class="line">    <span class="comment">#基地址</span></span><br><span class="line">    ADDRESS = <span class="number">0x1000</span></span><br><span class="line">    <span class="comment">#映射大小</span></span><br><span class="line">    SIZE = <span class="number">1024</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#创建反汇编引擎对象</span></span><br><span class="line">    CP = capstone.Cs(capstone.CS_ARCH_ARM,capstone.CS_MODE_THUMB)</span><br><span class="line">    <span class="comment">#读取反汇编代码</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> CP.disasm(CODE,ADDRESS):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[addr:%X]:\t%s\t%s&quot;</span> % (i.address,i.mnemonic,i.op_str))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#创建虚拟机对象</span></span><br><span class="line">    mu = unicorn.Uc(unicorn.UC_ARCH_ARM,unicorn.UC_MODE_THUMB)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#映射内存</span></span><br><span class="line">    mu.mem_map(ADDRESS,SIZE)</span><br><span class="line">    <span class="comment">#往内存写入代码</span></span><br><span class="line">    mu.mem_write(ADDRESS,CODE)</span><br><span class="line">    <span class="comment">#读取指定内存地址，return：bytesarray</span></span><br><span class="line">    <span class="built_in">bytes</span> = mu.mem_read(ADDRESS,<span class="number">10</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;ADDRESS:%X,content:%s&quot;</span> % (ADDRESS,binascii.b2a_hex(<span class="built_in">bytes</span>)))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#写入寄存器的值。arg_1：寄存器表达值，宏定义</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    UC_ARM_REG_R0 = 66</span></span><br><span class="line"><span class="string">    UC_ARM_REG_R1 = 67</span></span><br><span class="line"><span class="string">    UC_ARM_REG_R2 = 68</span></span><br><span class="line"><span class="string">    UC_ARM_REG_R3 = 69</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    mu.reg_write(unicorn.arm_const.UC_ARM_REG_R1,<span class="number">0x100</span>)</span><br><span class="line">    mu.reg_write(unicorn.arm_const.UC_ARM_REG_R0,<span class="number">0x200</span>)</span><br><span class="line"></span><br><span class="line">    reg_R3 = mu.reg_read(unicorn.arm_const.UC_ARM_REG_R3)</span><br><span class="line">    reg_R2 = mu.reg_read(unicorn.arm_const.UC_ARM_REG_R2)</span><br><span class="line">    reg_R1 = mu.reg_read(unicorn.arm_const.UC_ARM_REG_R1)</span><br><span class="line">    reg_R0 = mu.reg_read(unicorn.arm_const.UC_ARM_REG_R0)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-------before-------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;reg_R0:%x&quot;</span> % (reg_R0))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;reg_R1:%x&quot;</span> % (reg_R1))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;reg_R3:%x&quot;</span> % (reg_R3))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;reg_R2:%x&quot;</span> % (reg_R2))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#启动虚拟机执行代码。arg_1：开始地址、arg_2：结束地址</span></span><br><span class="line">    mu.emu_start(ADDRESS + <span class="number">1</span>,ADDRESS + <span class="built_in">len</span>(CODE))   <span class="comment">#ADDRESS + 1 ：是因为是执行Thumb格式代码，指令首地址都是奇数（很重要）</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#读取寄存器的值。arg_1：寄存器表达值，宏定义</span></span><br><span class="line">    reg_R3 = mu.reg_read(unicorn.arm_const.UC_ARM_REG_R3)</span><br><span class="line">    reg_R2 = mu.reg_read(unicorn.arm_const.UC_ARM_REG_R2)</span><br><span class="line">    reg_R1 = mu.reg_read(unicorn.arm_const.UC_ARM_REG_R1)</span><br><span class="line">    reg_R0 = mu.reg_read(unicorn.arm_const.UC_ARM_REG_R0)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-------after-------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;reg_R0:%x&quot;</span> % (reg_R0))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;reg_R1:%x&quot;</span> % (reg_R1))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;reg_R3:%x&quot;</span> % (reg_R3))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;reg_R2:%x&quot;</span> % (reg_R2))</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    Test_Arm32_Thumb()</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">output:</span></span><br><span class="line"><span class="string">[addr:1000]:	mov	r2, r1</span></span><br><span class="line"><span class="string">[addr:1002]:	mov	r3, r0</span></span><br><span class="line"><span class="string">ADDRESS:1000,content:b&#x27;0a460346000000000000&#x27;</span></span><br><span class="line"><span class="string">-------before-------</span></span><br><span class="line"><span class="string">reg_R0:200</span></span><br><span class="line"><span class="string">reg_R1:100</span></span><br><span class="line"><span class="string">reg_R3:0</span></span><br><span class="line"><span class="string">reg_R2:0</span></span><br><span class="line"><span class="string">-------after-------</span></span><br><span class="line"><span class="string">reg_R0:200</span></span><br><span class="line"><span class="string">reg_R1:100</span></span><br><span class="line"><span class="string">reg_R3:200</span></span><br><span class="line"><span class="string">reg_R2:100</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>

<p><img data-src="http://inews.gtimg.com/newsapp_ls/0/13610781004/0" alt="image-20210526101043331"></p>
<p><img data-src="http://inews.gtimg.com/newsapp_ls/0/13610791214/0" alt="image-20210604000033137"></p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安卓调试</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/06/03/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
