<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>fangのBlog</title>
  
  <subtitle>倔强</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-06-05T18:07:58.033Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>fang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Unicorn之模拟调用so文件</title>
    <link href="http://example.com/2021/06/03/Unicorn/"/>
    <id>http://example.com/2021/06/03/Unicorn/</id>
    <published>2021-06-03T15:55:18.707Z</published>
    <updated>2021-06-05T18:07:58.033Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、Unicorn中的接口"><a href="#一、Unicorn中的接口" class="headerlink" title="一、Unicorn中的接口"></a>一、Unicorn中的接口</h3><h5 id="1、内存相关"><a href="#1、内存相关" class="headerlink" title="1、内存相关"></a>1、内存相关</h5><ul><li>  uc_mem_map</li><li>  uc_mem_write</li><li>  uc_mem_read</li></ul><h5 id="2、寄存器相关"><a href="#2、寄存器相关" class="headerlink" title="2、寄存器相关"></a>2、寄存器相关</h5><ul><li>  uc_reg_write</li><li>  uc_reg_read</li></ul><p><strong>TEST</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> unicorn</span><br><span class="line"><span class="keyword">import</span> capstone</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Test_Arm32_Thumb</span>():</span></span><br><span class="line">    <span class="comment">#硬编码</span></span><br><span class="line">    CODE = <span class="string">b&#x27;\x0a\x46\x03\x46&#x27;</span></span><br><span class="line">    <span class="comment">#基地址</span></span><br><span class="line">    ADDRESS = <span class="number">0x1000</span></span><br><span class="line">    <span class="comment">#映射大小</span></span><br><span class="line">    SIZE = <span class="number">1024</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#创建反汇编引擎对象</span></span><br><span class="line">    CP = capstone.Cs(capstone.CS_ARCH_ARM,capstone.CS_MODE_THUMB)</span><br><span class="line">    <span class="comment">#读取反汇编代码</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> CP.disasm(CODE,ADDRESS):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[addr:%X]:\t%s\t%s&quot;</span> % (i.address,i.mnemonic,i.op_str))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#创建虚拟机对象</span></span><br><span class="line">    mu = unicorn.Uc(unicorn.UC_ARCH_ARM,unicorn.UC_MODE_THUMB)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#映射内存</span></span><br><span class="line">    mu.mem_map(ADDRESS,SIZE)</span><br><span class="line">    <span class="comment">#往内存写入代码</span></span><br><span class="line">    mu.mem_write(ADDRESS,CODE)</span><br><span class="line">    <span class="comment">#读取指定内存地址，return：bytesarray</span></span><br><span class="line">    <span class="built_in">bytes</span> = mu.mem_read(ADDRESS,<span class="number">10</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;ADDRESS:%X,content:%s&quot;</span> % (ADDRESS,binascii.b2a_hex(<span class="built_in">bytes</span>)))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#写入寄存器的值。arg_1：寄存器表达值，宏定义</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    UC_ARM_REG_R0 = 66</span></span><br><span class="line"><span class="string">    UC_ARM_REG_R1 = 67</span></span><br><span class="line"><span class="string">    UC_ARM_REG_R2 = 68</span></span><br><span class="line"><span class="string">    UC_ARM_REG_R3 = 69</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    mu.reg_write(unicorn.arm_const.UC_ARM_REG_R1,<span class="number">0x100</span>)</span><br><span class="line">    mu.reg_write(unicorn.arm_const.UC_ARM_REG_R0,<span class="number">0x200</span>)</span><br><span class="line"></span><br><span class="line">    reg_R3 = mu.reg_read(unicorn.arm_const.UC_ARM_REG_R3)</span><br><span class="line">    reg_R2 = mu.reg_read(unicorn.arm_const.UC_ARM_REG_R2)</span><br><span class="line">    reg_R1 = mu.reg_read(unicorn.arm_const.UC_ARM_REG_R1)</span><br><span class="line">    reg_R0 = mu.reg_read(unicorn.arm_const.UC_ARM_REG_R0)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-------before-------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;reg_R0:%x&quot;</span> % (reg_R0))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;reg_R1:%x&quot;</span> % (reg_R1))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;reg_R3:%x&quot;</span> % (reg_R3))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;reg_R2:%x&quot;</span> % (reg_R2))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#启动虚拟机执行代码。arg_1：开始地址、arg_2：结束地址</span></span><br><span class="line">    mu.emu_start(ADDRESS + <span class="number">1</span>,ADDRESS + <span class="built_in">len</span>(CODE))   <span class="comment">#ADDRESS + 1 ：是因为是执行Thumb格式代码，指令首地址都是奇数（很重要）</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#读取寄存器的值。arg_1：寄存器表达值，宏定义</span></span><br><span class="line">    reg_R3 = mu.reg_read(unicorn.arm_const.UC_ARM_REG_R3)</span><br><span class="line">    reg_R2 = mu.reg_read(unicorn.arm_const.UC_ARM_REG_R2)</span><br><span class="line">    reg_R1 = mu.reg_read(unicorn.arm_const.UC_ARM_REG_R1)</span><br><span class="line">    reg_R0 = mu.reg_read(unicorn.arm_const.UC_ARM_REG_R0)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-------after-------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;reg_R0:%x&quot;</span> % (reg_R0))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;reg_R1:%x&quot;</span> % (reg_R1))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;reg_R3:%x&quot;</span> % (reg_R3))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;reg_R2:%x&quot;</span> % (reg_R2))</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    Test_Arm32_Thumb()</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">output:</span></span><br><span class="line"><span class="string">[addr:1000]:movr2, r1</span></span><br><span class="line"><span class="string">[addr:1002]:movr3, r0</span></span><br><span class="line"><span class="string">ADDRESS:1000,content:b&#x27;0a460346000000000000&#x27;</span></span><br><span class="line"><span class="string">-------before-------</span></span><br><span class="line"><span class="string">reg_R0:200</span></span><br><span class="line"><span class="string">reg_R1:100</span></span><br><span class="line"><span class="string">reg_R3:0</span></span><br><span class="line"><span class="string">reg_R2:0</span></span><br><span class="line"><span class="string">-------after-------</span></span><br><span class="line"><span class="string">reg_R0:200</span></span><br><span class="line"><span class="string">reg_R1:100</span></span><br><span class="line"><span class="string">reg_R3:200</span></span><br><span class="line"><span class="string">reg_R2:100</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="http://inews.gtimg.com/newsapp_ls/0/13610781004/0" alt="image-20210526101043331"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;一、Unicorn中的接口&quot;&gt;&lt;a href=&quot;#一、Unicorn中的接口&quot; class=&quot;headerlink&quot; title=&quot;一、Unicorn中的接口&quot;&gt;&lt;/a&gt;一、Unicorn中的接口&lt;/h3&gt;&lt;h5 id=&quot;1、内存相关&quot;&gt;&lt;a href=&quot;#1、内</summary>
      
    
    
    
    <category term="Android" scheme="http://example.com/categories/Android/"/>
    
    
    <category term="安卓调试" scheme="http://example.com/tags/%E5%AE%89%E5%8D%93%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>KCTF 2021春季赛</title>
    <link href="http://example.com/2021/06/01/2021XCTF_FINAL%20APK/"/>
    <id>http://example.com/2021/06/01/2021XCTF_FINAL%20APK/</id>
    <published>2021-06-01T12:14:41.000Z</published>
    <updated>2021-06-01T12:20:15.163Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><escape>拿了件T恤 针不戳<span id="more"></span></escape></p></blockquote><h2 id="签到题-拜师学艺"><a href="#签到题-拜师学艺" class="headerlink" title="签到题 拜师学艺"></a>签到题 拜师学艺</h2><p>签到题很简单的啦,输入就这即可获得flag(bushi</p><p>首先我们丢进IDA里 很显然没壳</p><p>可以看见判断的代码奇奇怪怪的 定睛一看 很像是smc自解密</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599597720/0"></p><p>得嘞 那就跑起来看</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599597899/0"></p><p>可以看见走过去就已经变得不一样了  那么先对着 401266 按 u 再按 c </p><p>很好基本差不多识别出来了 再往下翻翻把漏掉的也按一下c 在跑到 main 的顶部按 p 识别为函数</p><p>然后终于可以 F5 啦</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599598062/0"></p><p>大概可以直接猜出逻辑 比较输入的前几位和最后一位</p><p>然后把输入经过 sub_401050 这个函数之后再与一串字符串比较</p><p>看到这个字符串相信做题比较多的第一感觉就是 base64算法,要不就是base64换表</p><p>那么进去验证验证猜想</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599598185/0"></p><p>ok 猜想正确 并且连表都没有换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="built_in">print</span>(base64.b64decode(<span class="string">&#x27;ZmxhZ3trYW54dWV9&#x27;</span>))</span><br><span class="line"><span class="comment">#flag&#123;kanxue&#125;</span></span><br></pre></td></tr></table></figure><p>签到成功</p><h2 id="第二题-南冥神功"><a href="#第二题-南冥神功" class="headerlink" title="第二题 南冥神功"></a>第二题 南冥神功</h2><p>老规矩丢进IDA F5</p><p>将 F5 的代码分析如下</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599598274/0"></p><p>用伪码简单说说</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">map</span>    = ...</span><br><span class="line">table  = ...</span><br><span class="line">input_ = row_input()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i in range(len(input_) - <span class="number">1</span>):</span><br><span class="line">index = table.indexof(input[i])</span><br><span class="line">step1 = <span class="number">5</span> - (index + i) % <span class="number">6</span></span><br><span class="line">step2 = (index / <span class="number">6</span> + i) % <span class="number">6</span></span><br><span class="line">    run(step1)</span><br><span class="line">    run(step2)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i in <span class="built_in">map</span>:</span><br><span class="line"><span class="keyword">if</span> i == <span class="number">0</span></span><br><span class="line">        print(<span class="string">&#x27;GG&#x27;</span>)</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;you win!&#x27;</span>)</span><br></pre></td></tr></table></figure><p>run的规则是</p><blockquote><p>要走的地方不能是墙 x和y分别都不能越界</p><p>走了一步以后把当前位置标记为墙</p></blockquote><p>step对应的路</p><blockquote><p>1// 右移<br>4// 左移<br>2// 若y为奇数 则直下        若y为偶数 则往右下走<br>3// 若y为奇数 则往左下走 若y为偶数 则直下<br>5// 若y为奇数 则往左上走 若y为偶数 则直上<br>0// 若y为奇数 则直上        若y为偶数 则往右上走</p></blockquote><p>与常规迷宫不同的是满足特定条件可以往斜着走</p><p>其实可以看出来这个题就是我们 qq 里面经常玩的一笔画</p><p>路径就是这样</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599598468/0"></p><p>转换成step就是</p><blockquote><p>1234321234321101210050543450501210121234322321</p></blockquote><p>step 就可以转换成 index 再转换成 table 中的字符 即 flag 了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> table[] = <span class="string">&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> path[] = <span class="string">&quot;1234321234321101210050543450501210121234322321&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; path[i]; i += <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> step1 = path[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">int</span> step2 = path[i + <span class="number">1</span>] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">36</span>; ++j)</span><br><span class="line"><span class="keyword">if</span> (step1 == <span class="number">5</span> - (i / <span class="number">2</span> + j) % <span class="number">6</span> &amp;&amp; step2 == (i / <span class="number">2</span> + j / <span class="number">6</span>) % <span class="number">6</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, table[j]);</span><br><span class="line">&#125;<span class="comment">//GJ0V4LA4VKEVQZSVCNGJ00N</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>验证成功</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599598566/0"></p><h2 id="第三题-统一门派"><a href="#第三题-统一门派" class="headerlink" title="第三题 统一门派"></a>第三题 统一门派</h2><p>这是一道web题</p><p>若依开源快速开发平台：<a href="https://gitee.com/y_project/RuoYi-Vue">https://gitee.com/y_project/RuoYi-Vue</a></p><p>端口开放了 Redis 的 6379，可以进行未授权访问：</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599598657/0"></p><p><code>keys *</code> 会发现存在一个缓存了用户登录 token 的 <code>login_tokens:3109ec3f-6e84-48f5-bc1f-4f351d236333</code>（其它的都是别的师傅在打这个环境的时候留下的。。），可以 get 一下：<br><code>get &quot;login_tokens:3109ec3f-6e84-48f5-bc1f-4f351d236333&quot;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&#123;\&quot;@type\&quot;:\&quot;com.ruoyi.common.core.domain.model.LoginUser\&quot;,\&quot;accountNonExpired\&quot;:true,\&quot;accountNonLocked\&quot;:true,\&quot;browser\&quot;:\&quot;Chrome 9\&quot;,\&quot;credentialsNonExpired\&quot;:true,\&quot;enabled\&quot;:true,\&quot;expireTime\&quot;:1690354819542,\&quot;ipaddr\&quot;:\&quot;117.175.182.182\&quot;,\&quot;loginLocation\&quot;:\&quot;XX XX\&quot;,\&quot;loginTime\&quot;:1620354879542,\&quot;os\&quot;:\&quot;Windows 10\&quot;,\&quot;password\&quot;:\&quot;$2a$10$TbIq6QkLbP4MrjPaOJ2Y4.UqYYyChFC0HYrC7etAPI9iL1GOJ6ZLG\&quot;,\&quot;permissions\&quot;:Set[\&quot;*:*:*\&quot;],\&quot;token\&quot;:\&quot;07aaf192-ca8f-4db7-a6a2-ee81dbf07d58\&quot;,\&quot;user\&quot;:&#123;\&quot;admin\&quot;:true,\&quot;avatar\&quot;:\&quot;\&quot;,\&quot;createBy\&quot;:\&quot;admin\&quot;,\&quot;createTime\&quot;:1620186031000,\&quot;delFlag\&quot;:\&quot;0\&quot;,\&quot;dept\&quot;:&#123;\&quot;children\&quot;:[],\&quot;deptId\&quot;:103,\&quot;deptName\&quot;:\&quot;\xe7\xa0\x94\xe5\x8f\x91\xe9\x83\xa8\xe9\x97\xa8\&quot;,\&quot;leader\&quot;:\&quot;\xe8\x8b\xa5\xe4\xbe\x9d\&quot;,\&quot;orderNum\&quot;:\&quot;1\&quot;,\&quot;params\&quot;:&#123;\&quot;@type\&quot;:\&quot;java.util.HashMap\&quot;&#125;,\&quot;parentId\&quot;:101,\&quot;status\&quot;:\&quot;0\&quot;&#125;,\&quot;deptId\&quot;:103,\&quot;email\&quot;:\&quot;ry@163.com\&quot;,\&quot;loginDate\&quot;:1620186031000,\&quot;loginIp\&quot;:\&quot;127.0.0.1\&quot;,\&quot;nickName\&quot;:\&quot;\xe8\x8b\xa5\xe4\xbe\x9d\&quot;,\&quot;params\&quot;:&#123;\&quot;@type\&quot;:\&quot;java.util.HashMap\&quot;&#125;,\&quot;password\&quot;:\&quot;$2a$10$TbIq6QkLbP4MrjPaOJ2Y4.UqYYyChFC0HYrC7etAPI9iL1GOJ6ZLG\&quot;,\&quot;phonenumber\&quot;:\&quot;15888888888\&quot;,\&quot;remark\&quot;:\&quot;\xe7\xae\xa1\xe7\x90\x86\xe5\x91\x98\&quot;,\&quot;roles\&quot;:[&#123;\&quot;admin\&quot;:true,\&quot;dataScope\&quot;:\&quot;1\&quot;,\&quot;deptCheckStrictly\&quot;:false,\&quot;flag\&quot;:false,\&quot;menuCheckStrictly\&quot;:false,\&quot;params\&quot;:&#123;\&quot;@type\&quot;:\&quot;java.util.HashMap\&quot;&#125;,\&quot;roleId\&quot;:1,\&quot;roleKey\&quot;:\&quot;admin\&quot;,\&quot;roleName\&quot;:\&quot;\xe8\xb6\x85\xe7\xba\xa7\xe7\xae\xa1\xe7\x90\x86\xe5\x91\x98\&quot;,\&quot;roleSort\&quot;:\&quot;1\&quot;,\&quot;status\&quot;:\&quot;0\&quot;&#125;],\&quot;sex\&quot;:\&quot;1\&quot;,\&quot;status\&quot;:\&quot;0\&quot;,\&quot;userId\&quot;:1,\&quot;userName\&quot;:\&quot;admin\&quot;&#125;,\&quot;username\&quot;:\&quot;admin\&quot;&#125;&quot;</span><br></pre></td></tr></table></figure><p>猜测 JWT 的密钥为默认密钥，可以伪造 Admin-Token 登录，直接上演示地址获取一下：<a href="http://vue.ruoyi.vip/index">http://vue.ruoyi.vip/index</a></p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599598820/0"></p><p>JWTdecode</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599599004/0"></p><p>然后 set 一个新的 login_tokens：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set login_tokens:20c5d147-ca80-41ea-94cb-726c7b6c8b67 &quot;&#123;\&quot;@type\&quot;:\&quot;com.ruoyi.common.core.domain.model.LoginUser\&quot;,\&quot;accountNonExpired\&quot;:true,\&quot;accountNonLocked\&quot;:true,\&quot;browser\&quot;:\&quot;Chrome 9\&quot;,\&quot;credentialsNonExpired\&quot;:true,\&quot;enabled\&quot;:true,\&quot;expireTime\&quot;:1690354819542,\&quot;ipaddr\&quot;:\&quot;117.175.182.182\&quot;,\&quot;loginLocation\&quot;:\&quot;XX XX\&quot;,\&quot;loginTime\&quot;:1620354879542,\&quot;os\&quot;:\&quot;Windows 10\&quot;,\&quot;password\&quot;:\&quot;$2a$10$TbIq6QkLbP4MrjPaOJ2Y4.UqYYyChFC0HYrC7etAPI9iL1GOJ6ZLG\&quot;,\&quot;permissions\&quot;:Set[\&quot;*:*:*\&quot;],\&quot;token\&quot;:\&quot;20c5d147-ca80-41ea-94cb-726c7b6c8b67\&quot;,\&quot;user\&quot;:&#123;\&quot;admin\&quot;:true,\&quot;avatar\&quot;:\&quot;\&quot;,\&quot;createBy\&quot;:\&quot;admin\&quot;,\&quot;createTime\&quot;:1620186031000,\&quot;delFlag\&quot;:\&quot;0\&quot;,\&quot;dept\&quot;:&#123;\&quot;children\&quot;:[],\&quot;deptId\&quot;:103,\&quot;deptName\&quot;:\&quot;\xe7\xa0\x94\xe5\x8f\x91\xe9\x83\xa8\xe9\x97\xa8\&quot;,\&quot;leader\&quot;:\&quot;\xe8\x8b\xa5\xe4\xbe\x9d\&quot;,\&quot;orderNum\&quot;:\&quot;1\&quot;,\&quot;params\&quot;:&#123;\&quot;@type\&quot;:\&quot;java.util.HashMap\&quot;&#125;,\&quot;parentId\&quot;:101,\&quot;status\&quot;:\&quot;0\&quot;&#125;,\&quot;deptId\&quot;:103,\&quot;email\&quot;:\&quot;ry@163.com\&quot;,\&quot;loginDate\&quot;:1620186031000,\&quot;loginIp\&quot;:\&quot;127.0.0.1\&quot;,\&quot;nickName\&quot;:\&quot;\xe8\x8b\xa5\xe4\xbe\x9d\&quot;,\&quot;params\&quot;:&#123;\&quot;@type\&quot;:\&quot;java.util.HashMap\&quot;&#125;,\&quot;password\&quot;:\&quot;$2a$10$TbIq6QkLbP4MrjPaOJ2Y4.UqYYyChFC0HYrC7etAPI9iL1GOJ6ZLG\&quot;,\&quot;phonenumber\&quot;:\&quot;15888888888\&quot;,\&quot;remark\&quot;:\&quot;\xe7\xae\xa1\xe7\x90\x86\xe5\x91\x98\&quot;,\&quot;roles\&quot;:[&#123;\&quot;admin\&quot;:true,\&quot;dataScope\&quot;:\&quot;1\&quot;,\&quot;deptCheckStrictly\&quot;:false,\&quot;flag\&quot;:false,\&quot;menuCheckStrictly\&quot;:false,\&quot;params\&quot;:&#123;\&quot;@type\&quot;:\&quot;java.util.HashMap\&quot;&#125;,\&quot;roleId\&quot;:1,\&quot;roleKey\&quot;:\&quot;admin\&quot;,\&quot;roleName\&quot;:\&quot;\xe8\xb6\x85\xe7\xba\xa7\xe7\xae\xa1\xe7\x90\x86\xe5\x91\x98\&quot;,\&quot;roleSort\&quot;:\&quot;1\&quot;,\&quot;status\&quot;:\&quot;0\&quot;&#125;],\&quot;sex\&quot;:\&quot;1\&quot;,\&quot;status\&quot;:\&quot;0\&quot;,\&quot;userId\&quot;:1,\&quot;userName\&quot;:\&quot;admin\&quot;&#125;,\&quot;username\&quot;:\&quot;admin\&quot;&#125;&quot;</span><br></pre></td></tr></table></figure><p>BP 改一下 response:</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599599172/0"></p><p>原来的是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;msg&quot;:&quot;用户不存在/密码错误&quot;,&quot;code&quot;:500&#125;</span><br></pre></td></tr></table></figure><p>直接改为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;msg&quot;:&quot;登录成功&quot;,&quot;code&quot;:200,&quot;token&quot;:&quot;eyJhbGciOiJIUzUxMiJ9.eyJsb2dpbl91c2VyX2tleSI6IjIwYzVkMTQ3LWNhODAtNDFlYS05NGNiLTcyNmM3YjZjOGI2NyJ9.MgnwzkItWS6VMr-iw-TrxVmT0JSbAOIF6eOuQP_x_-JSenAIs0KXJn5kEfUU-NTuMQN1vDWfVdcZfetO4QXQCQ&quot;&#125;</span><br></pre></td></tr></table></figure><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599599320/0"></p><h2 id="第四题-英雄救美"><a href="#第四题-英雄救美" class="headerlink" title="第四题 英雄救美"></a>第四题 英雄救美</h2><p>一丢进 IDA 可以发现符号表 暗示着这题有点难</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599599386/0"></p><p>猜测 sub_401240 和 sub_401000 为两个 check 函数</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599599479/0"></p><p>想要继续往下走 也就是 sub_401240 和 sub_401000 返回值都要为 1</p><p>先分析分析前面那个</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599599563/0"></p><p>可以看出这是一个 fill 函数</p><p>所做的只是将输入转换为在 table 中的 index</p><p>并提供给下一个 check 函数使用</p><p>值得注意的是传给 check 函数的参数</p><blockquote><p>if ( len &lt;= 64 &amp;&amp; fill(len, input, v10) == 1 &amp;&amp; check(v10, len - 9) == 1 )</p></blockquote><p>len 少了 9</p><p>意味着有 9 位输入被截取掉了</p><p>而再仔细回头看 fill 函数可以发现</p><p>若输入的是数字 并不会储存起来</p><p>而是跳过并且更改所比较的 table 的起始 index</p><p>再看看 check 函数</p><img src="http://inews.gtimg.com/newsapp_ls/0/13599599684/0"  /><p>着一大部分都是将 fill 的结果填入一个表中 若被填的那一位为0 则填入</p><p>按照一个循环里9次判断,总共9次循环 将map划分为这样</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599599790/0"></p><p>按照经验来看的话很像是数独 用在线网站解一下</p><img src="http://inews.gtimg.com/newsapp_ls/0/13599599897/0" alt="image-20210525154624787" style="zoom: 80%;" /><p>正好有解 应该还是唯一解</p><p>那这就出了撒</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> table[] = &#123; <span class="number">0x24</span>, <span class="number">0x42</span>, <span class="number">0x50</span>, <span class="number">0x56</span>, <span class="number">0x3A</span>, <span class="number">0x75</span>, <span class="number">0x62</span>, <span class="number">0x66</span>, <span class="number">0x59</span>, <span class="number">0x70</span>, <span class="number">0x7D</span>, <span class="number">0x5D</span>, <span class="number">0x44</span>, <span class="number">0x74</span>, <span class="number">0x4E</span>, <span class="number">0x3E</span>, <span class="number">0x61</span>, <span class="number">0x54</span>, <span class="number">0x5E</span>, <span class="number">0x4D</span>, <span class="number">0x47</span>, <span class="number">0x6D</span>, <span class="number">0x4A</span>, <span class="number">0x51</span>, <span class="number">0x23</span>, <span class="number">0x2A</span>, <span class="number">0x48</span>, <span class="number">0x72</span>, <span class="number">0x60</span>, <span class="number">0x4F</span>, <span class="number">0x27</span>, <span class="number">0x77</span>, <span class="number">0x6A</span>, <span class="number">0x69</span>, <span class="number">0x63</span>, <span class="number">0x30</span>, <span class="number">0x21</span>, <span class="number">0x68</span>, <span class="number">0x64</span>, <span class="number">0x79</span>, <span class="number">0x7B</span>, <span class="number">0x6F</span>, <span class="number">0x5A</span>, <span class="number">0x7A</span>, <span class="number">0x2D</span>, <span class="number">0x40</span>, <span class="number">0x6E</span>, <span class="number">0x2B</span>, <span class="number">0x3F</span>, <span class="number">0x26</span>, <span class="number">0x25</span>, <span class="number">0x73</span>, <span class="number">0x5F</span>, <span class="number">0x2F</span>, <span class="number">0x67</span>, <span class="number">0x3C</span>, <span class="number">0x65</span>, <span class="number">0x5B</span>, <span class="number">0x57</span>, <span class="number">0x29</span>, <span class="number">0x58</span>, <span class="number">0x55</span>, <span class="number">0x78</span>, <span class="number">0x52</span>, <span class="number">0x46</span>, <span class="number">0x53</span>, <span class="number">0x4C</span>, <span class="number">0x52</span>, <span class="number">0x41</span>, <span class="number">0x3B</span>, <span class="number">0x2E</span>, <span class="number">0x6C</span>, <span class="number">0x3D</span>, <span class="number">0x43</span>, <span class="number">0x45</span>, <span class="number">0x6B</span>, <span class="number">0x76</span>, <span class="number">0x4B</span>, <span class="number">0x2D</span>, <span class="number">0x28</span>, <span class="number">0x71</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* path = <span class="string">&quot;5619238\n18345\n76219\n7846925\n4539786\n6928713\n28563\n61728\n1793452\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; path[i]; ++i)</span><br><span class="line"><span class="keyword">if</span> (path[i] != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, table[ y * <span class="number">9</span> + path[i] - <span class="string">&#x27;0&#x27;</span> - <span class="number">1</span> ]);</span><br><span class="line">x++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="number">9</span> - x);</span><br><span class="line">x = <span class="number">0</span>;</span><br><span class="line">y++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>验证成功</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599599979/0"></p><blockquote><p>:u$YBPf2pa]Dt4#QM^H4ic‘j0`w2y{d-Zzo2%/n_s@+2&lt;UW)e4AR;F.4=-qEkvC2</p></blockquote><h2 id="第五题-华山论剑"><a href="#第五题-华山论剑" class="headerlink" title="第五题 华山论剑"></a>第五题 华山论剑</h2><p>unidbg trace so文件的 java 工程代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kanxue.testbase;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> capstone.Capstone;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.AndroidEmulator;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.Emulator;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.Module;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.Symbol;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.arm.ARM;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.arm.HookStatus;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.arm.context.Arm32RegisterContext;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.arm.context.RegisterContext;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.debugger.DebuggerType;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.hook.HookContext;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.hook.ReplaceCallback;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.hook.hookzz.Dobby;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.hook.hookzz.HookEntryInfo;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.hook.hookzz.HookZz;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.hook.hookzz.IHookZz;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.hook.hookzz.InstrumentCallback;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.hook.hookzz.WrapCallback;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.hook.xhook.IxHook;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.linux.android.AndroidARMEmulator;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.linux.android.AndroidResolver;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.linux.android.XHookImpl;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.linux.android.dvm.DalvikModule;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.linux.android.dvm.DvmClass;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.linux.android.dvm.DvmObject;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.linux.android.dvm.VM;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.linux.android.dvm.array.ByteArray;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.linux.android.dvm.StringObject;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.linux.android.dvm.AbstractJni;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.listener.TraceCodeListener;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.memory.Memory;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.utils.Inspector;</span><br><span class="line"><span class="keyword">import</span> com.sun.jna.Pointer;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.arm.backend.CodeHook;</span><br><span class="line"><span class="keyword">import</span> com.github.unidbg.arm.backend.Backend;</span><br><span class="line"><span class="keyword">import</span> unicorn.ArmConst;</span><br><span class="line"><span class="keyword">import</span> unicorn.Unicorn;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AbstractJni</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MainActivity mainActivity = <span class="keyword">new</span> MainActivity();</span><br><span class="line">        mainActivity.stringFromJNI();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> AndroidEmulator emulator;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> VM vm;</span><br><span class="line">    <span class="keyword">private</span> DvmClass cNative;</span><br><span class="line">    DalvikModule dm;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">MainActivity</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        emulator = <span class="keyword">new</span> AndroidARMEmulator(<span class="string">&quot;aa&quot;</span>);</span><br><span class="line">        Memory memory = emulator.getMemory();</span><br><span class="line">        <span class="comment">// 设置 sdk版本 23</span></span><br><span class="line">        <span class="comment">//LibraryResolver resolver = ;</span></span><br><span class="line">        memory.setLibraryResolver(<span class="keyword">new</span> AndroidResolver(<span class="number">23</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建DalvikVM，可以载入apk，也可以为null</span></span><br><span class="line">        vm = emulator.createDalvikVM(<span class="keyword">null</span>);</span><br><span class="line">        <span class="comment">// 是否打印日志</span></span><br><span class="line">        vm.setVerbose(<span class="keyword">false</span>);</span><br><span class="line">        vm.setJni(<span class="keyword">this</span>);</span><br><span class="line">        <span class="comment">//vm.setDvmClassFactory(new ProxyClassFactory());</span></span><br><span class="line">        <span class="comment">// System.out.println(getPath());</span></span><br><span class="line">        <span class="comment">// 载入要执行的 so</span></span><br><span class="line">         dm = vm.loadLibrary(<span class="keyword">new</span> File(getPath() + <span class="string">&quot;/kanxue/libhello-jni.so&quot;</span>), <span class="keyword">false</span>);</span><br><span class="line">        dm.callJNI_OnLoad(emulator);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">stringFromJNI</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Jni调用的类</span></span><br><span class="line">        cNative = vm.resolveClass(<span class="string">&quot;com/example/hellojni/HelloJni&quot;</span>);</span><br><span class="line">        <span class="keyword">final</span> StringBuilder stringBuilder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"><span class="comment">//        Module module = dm.getModule();</span></span><br><span class="line"><span class="comment">//        emulator.traceCode(module.base, module.base + module.size, new TraceCodeListener() &#123;</span></span><br><span class="line"><span class="comment">//            @Override</span></span><br><span class="line"><span class="comment">//            public void onInstruction(Emulator&lt;?&gt; emulator, long address, Capstone.CsInsn insn) &#123;</span></span><br><span class="line"><span class="comment">//                StringBuilder sb = new StringBuilder();</span></span><br><span class="line"><span class="comment">//                sb.append(&quot;==== Trace&quot;);</span></span><br><span class="line"><span class="comment">//                sb.append(ARM.assembleDetail(emulator, insn, address, false));</span></span><br><span class="line"><span class="comment">//                sb.append(&#x27;\n&#x27;);</span></span><br><span class="line"><span class="comment">//                //sb.append(emulator.getBackend().reg_read(1).toString());</span></span><br><span class="line"><span class="comment">//                //emulator.getContext().</span></span><br><span class="line"><span class="comment">//                String i0  = String.format(&quot;R0=%08X&quot;, emulator.getBackend().reg_read(ArmConst.UC_ARM_REG_R0 ).intValue());</span></span><br><span class="line"><span class="comment">//                String i1  = String.format(&quot;R1=%08X&quot;, emulator.getBackend().reg_read(ArmConst.UC_ARM_REG_R1 ).intValue());;</span></span><br><span class="line"><span class="comment">//                String i2  = String.format(&quot;R2=%08X&quot;, emulator.getBackend().reg_read(ArmConst.UC_ARM_REG_R2 ).intValue());;</span></span><br><span class="line"><span class="comment">//                String i3  = String.format(&quot;R3=%08X&quot;, emulator.getBackend().reg_read(ArmConst.UC_ARM_REG_R3 ).intValue());;</span></span><br><span class="line"><span class="comment">//                String i4  = String.format(&quot;R4=%08X&quot;, emulator.getBackend().reg_read(ArmConst.UC_ARM_REG_R4 ).intValue());;</span></span><br><span class="line"><span class="comment">//                String i5  = String.format(&quot;R5=%08X&quot;, emulator.getBackend().reg_read(ArmConst.UC_ARM_REG_R5 ).intValue());;</span></span><br><span class="line"><span class="comment">//                String i6  = String.format(&quot;R6=%08X&quot;, emulator.getBackend().reg_read(ArmConst.UC_ARM_REG_R6 ).intValue());;</span></span><br><span class="line"><span class="comment">//                String i7  = String.format(&quot;R7=%08X&quot;, emulator.getBackend().reg_read(ArmConst.UC_ARM_REG_R7 ).intValue());;</span></span><br><span class="line"><span class="comment">//                String i8  = String.format(&quot;R8=%08X&quot;, emulator.getBackend().reg_read(ArmConst.UC_ARM_REG_R8 ).intValue());;</span></span><br><span class="line"><span class="comment">//                String i9  = String.format(&quot;R9=%08X&quot;, emulator.getBackend().reg_read(ArmConst.UC_ARM_REG_R9 ).intValue());;</span></span><br><span class="line"><span class="comment">//                String i10 = String.format(&quot;R10=%08X&quot;, emulator.getBackend().reg_read(ArmConst.UC_ARM_REG_R10).intValue());;</span></span><br><span class="line"><span class="comment">//                String i11 = String.format(&quot;R11=%08X&quot;, emulator.getBackend().reg_read(ArmConst.UC_ARM_REG_R11).intValue());;</span></span><br><span class="line"><span class="comment">//                String i12 = String.format(&quot;R12=%08X&quot;, emulator.getBackend().reg_read(ArmConst.UC_ARM_REG_R12).intValue());;</span></span><br><span class="line"><span class="comment">//                String i13 = String.format(&quot;SP=%08X&quot;, emulator.getBackend().reg_read(ArmConst.UC_ARM_REG_SP).intValue());;</span></span><br><span class="line"><span class="comment">//                String i14 = String.format(&quot;LR=%08X&quot;, emulator.getBackend().reg_read(ArmConst.UC_ARM_REG_LR).intValue());;</span></span><br><span class="line"><span class="comment">//                String i15 = String.format(&quot;PC=%08X&quot;, emulator.getBackend().reg_read(ArmConst.UC_ARM_REG_PC).intValue());;</span></span><br><span class="line"><span class="comment">//                sb.append(</span></span><br><span class="line"><span class="comment">//                        i0 +&quot; &quot;+</span></span><br><span class="line"><span class="comment">//                        i1 +&quot; &quot;+</span></span><br><span class="line"><span class="comment">//                        i2 +&quot; &quot;+</span></span><br><span class="line"><span class="comment">//                        i3 +&quot; &quot;+</span></span><br><span class="line"><span class="comment">//                        i4 +&quot; &quot;+</span></span><br><span class="line"><span class="comment">//                        i5 +&quot; &quot;+</span></span><br><span class="line"><span class="comment">//                        i6 +&quot; &quot;+</span></span><br><span class="line"><span class="comment">//                        i7 +&quot; &quot;+</span></span><br><span class="line"><span class="comment">//                        i8 +&quot; &quot;+</span></span><br><span class="line"><span class="comment">//                        i9 +&quot; &quot;+</span></span><br><span class="line"><span class="comment">//                        i10+&quot; &quot;+</span></span><br><span class="line"><span class="comment">//                        i11+&quot; &quot;+</span></span><br><span class="line"><span class="comment">//                        i12+&quot; &quot;+</span></span><br><span class="line"><span class="comment">//                        i13+&quot; &quot;+</span></span><br><span class="line"><span class="comment">//                        i14+&quot; &quot;+</span></span><br><span class="line"><span class="comment">//                        i15</span></span><br><span class="line"><span class="comment">//                );</span></span><br><span class="line"><span class="comment">//                //emulator.getBackend().mem_read()</span></span><br><span class="line"><span class="comment">//                sb.append(&#x27;\n&#x27;);</span></span><br><span class="line"><span class="comment">//                stringBuilder.append(sb.toString());</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125;);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        StringObject strRc;</span><br><span class="line"></span><br><span class="line">        String[] hexs=&#123;<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>,<span class="string">&quot;4&quot;</span>,<span class="string">&quot;5&quot;</span>,<span class="string">&quot;6&quot;</span>,<span class="string">&quot;7&quot;</span>,<span class="string">&quot;8&quot;</span>,<span class="string">&quot;9&quot;</span>,<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>,<span class="string">&quot;d&quot;</span>,<span class="string">&quot;e&quot;</span>,<span class="string">&quot;f&quot;</span>&#125;;</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">24</span>;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> rd = (<span class="keyword">int</span>)(Math.random() * <span class="number">16</span>);</span><br><span class="line">                sb.append(hexs[rd]);</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//            System.out.println(sb.toString());</span></span><br><span class="line">            strRc = cNative.callStaticJniMethodObject(</span><br><span class="line">                    emulator,</span><br><span class="line">                    <span class="string">&quot;stringFromJNI(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;&quot;</span>,</span><br><span class="line">                    <span class="keyword">new</span> StringObject(vm, <span class="string">&quot;KCTF&quot;</span>),</span><br><span class="line">                    <span class="keyword">new</span> StringObject(vm, sb.toString())</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line"><span class="comment">//            System.out.println(&quot;call stringFromJNI rc = &quot; + strRc.getValue());</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!strRc.getValue().equals(<span class="string">&quot;输入错误&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;恭喜成功:&quot;</span> + sb.toString());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//EncryptUtilsJni encryptUtilsJni = new EncryptUtilsJni(soFilePath, classPath);</span></span><br><span class="line">        <span class="comment">//// 输出getGameKey方法调用结果</span></span><br><span class="line">        <span class="comment">//System.err.println(encryptUtilsJni.myJni(methodSign));</span></span><br><span class="line">        <span class="comment">//encryptUtilsJni.destroy();</span></span><br><span class="line">        <span class="comment">//name:ed8b9244350d3644</span></span><br><span class="line">        <span class="comment">//searial:7C9815255BFE832D3F93140B</span></span><br><span class="line">        <span class="comment">//System.out.println(&quot;call stringFromJNI rc = &quot; + strRc.getValue());</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        File file = new File(&quot;C:\\Users\\KuCha\\Desktop\\_trace6.txt&quot;);</span></span><br><span class="line"><span class="comment">//        try &#123;</span></span><br><span class="line"><span class="comment">//            FileWriter fileWriter = new FileWriter(file);</span></span><br><span class="line"><span class="comment">//            fileWriter.write(stringBuilder.toString());</span></span><br><span class="line"><span class="comment">//            fileWriter.flush();</span></span><br><span class="line"><span class="comment">//            fileWriter.close();</span></span><br><span class="line"><span class="comment">//        &#125; catch (IOException e) &#123;</span></span><br><span class="line"><span class="comment">//            e.printStackTrace();</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPath</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        String path = <span class="keyword">this</span>.getClass().getProtectionDomain().getCodeSource().getLocation().getPath();</span><br><span class="line">        <span class="keyword">if</span>(System.getProperty(<span class="string">&quot;os.name&quot;</span>).contains(<span class="string">&quot;dows&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            path = path.substring(<span class="number">1</span>,path.length());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(path.contains(<span class="string">&quot;jar&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// System.out.println(&quot;jar = &quot; + path);</span></span><br><span class="line">            path = path.substring(<span class="number">0</span>,path.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">            <span class="keyword">return</span> path.substring(<span class="number">0</span>,path.lastIndexOf(<span class="string">&quot;/&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// System.out.println(path);</span></span><br><span class="line">        <span class="comment">// path.replace(&quot;target/classes/&quot;, &quot;&quot;);</span></span><br><span class="line">        <span class="keyword">return</span> path.replace(<span class="string">&quot;/target/test-classes/&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="第六题-寻回宝剑"><a href="#第六题-寻回宝剑" class="headerlink" title="第六题 寻回宝剑"></a>第六题 寻回宝剑</h2><blockquote><p>这题开始做的时候顶着混淆硬做的 后来发现这个混淆还挺少的 尝试去一下混淆 锻炼一下自己的python能力</p></blockquote><h3 id="0x0-破障"><a href="#0x0-破障" class="headerlink" title="0x0 破障"></a>0x0 破障</h3><p>这题被混淆得很难看</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599600106/0"></p><p>IDA 一进去 就可以看见 start函数的混淆 这种混淆很容易去掉</p><p>这里我使用的是 IDApython 去掉的这个混淆 原理是汇编的特征码</p><h4 id="0x00-patch-one"><a href="#0x00-patch-one" class="headerlink" title="0x00 patch one"></a>0x00 patch one</h4><p>利用特征码定位混淆头部 在从头部按照一定偏移取出用来计算跳转位置的值</p><p>比如这里要先从 <code>call $+5</code> 执行后的 offset 取出 base </p><p>然后再从 <code>xor rax，9BA38</code> 取出 <code>xored</code> </p><p>跳转位置即用 <code>base ^ xored</code> 算出 再转成汇编字节码写入混淆头部</p><p>最后把其他未执行的混淆部分的指令 nop 掉</p><p>虽然 xor 的数值不同 造成特征码也不一样</p><p>不过没关系 写成模糊搜索就行了(后面才发现有个 <code>idc.find_binary</code> 可以直接用 不过写都写了2333</p><p>写成脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search</span>(<span class="params">address,table</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(table)):</span><br><span class="line">        <span class="keyword">if</span> table[i] != <span class="string">&#x27;?&#x27;</span>:</span><br><span class="line">            <span class="keyword">if</span> ida_bytes.get_byte(start+i) == table[i]:</span><br><span class="line">                <span class="keyword">if</span> i == <span class="built_in">len</span>(table) - <span class="number">1</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getshell</span>(<span class="params">start</span>):</span></span><br><span class="line">    jmpst  = start + <span class="number">8</span></span><br><span class="line">    xored  = ida_bytes.get_dword(start+<span class="number">11</span>)</span><br><span class="line">    ret    = jmpst ^ xored</span><br><span class="line">    asmret = ret - (start + <span class="number">5</span>)</span><br><span class="line">    shell=[<span class="string">&#x27;&#x27;</span>] * <span class="number">5</span> + (<span class="built_in">len</span>(table) - <span class="number">5</span>) * [<span class="number">0x90</span>]</span><br><span class="line">    shell[<span class="number">0</span>]=<span class="number">0xe9</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">        shell[i+<span class="number">1</span>] = (asmret &amp; (<span class="number">0xff</span> &lt;&lt; i*<span class="number">8</span>)) &gt;&gt; i * <span class="number">8</span></span><br><span class="line">    <span class="keyword">return</span> shell</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fkret</span>():</span></span><br><span class="line">    start  = <span class="number">0x140000000</span></span><br><span class="line">    end    = <span class="number">0x1400FA698</span></span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> start &lt;= end:</span><br><span class="line">        <span class="keyword">if</span> search(start,table) == <span class="number">1</span>:</span><br><span class="line">            <span class="comment">#print (&#x27;found at &#x27; + str(hex(start)))  </span></span><br><span class="line">            shell  = getshell(start)</span><br><span class="line">            mypatch(start,shell)</span><br><span class="line">            start += <span class="built_in">len</span>(table) - <span class="number">1</span></span><br><span class="line">            count += <span class="number">1</span></span><br><span class="line">        start += <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;fkret count=&#x27;</span>+<span class="built_in">str</span>(count))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mypatch</span>(<span class="params">address,shell</span>):</span></span><br><span class="line">    <span class="keyword">for</span> ch <span class="keyword">in</span> shell:</span><br><span class="line">        ida_bytes.patch_byte(address,ch)</span><br><span class="line">        address += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">table =[<span class="number">0x50</span>,<span class="number">0x50</span>,<span class="number">0x9c</span>,<span class="number">0xe8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x58</span>,<span class="number">0x48</span>,<span class="number">0x35</span>,<span class="string">&#x27;?&#x27;</span>,<span class="string">&#x27;?&#x27;</span>,<span class="string">&#x27;?&#x27;</span>,<span class="string">&#x27;?&#x27;</span>,<span class="number">0x48</span>,<span class="number">0x89</span>,<span class="number">0x44</span>,<span class="number">0x24</span>,<span class="number">0x10</span>,<span class="number">0x9d</span>,<span class="number">0x58</span>,<span class="number">0xc3</span>]</span><br><span class="line"></span><br><span class="line">fkret()</span><br></pre></td></tr></table></figure><blockquote><p>fkret count=34213</p></blockquote><h4 id="0x01-patch-two-and-three"><a href="#0x01-patch-two-and-three" class="headerlink" title="0x01 patch two and three"></a>0x01 patch two and three</h4><p>保存以后再继续看 发现还是不好看 很多跳转</p><p>用 IDA trace 看看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">push    rbx                     </span><br><span class="line">jmp     loc_1400C446D           </span><br><span class="line">pop     rbx                     </span><br><span class="line">jmp     sub_14003F5A7           </span><br><span class="line">push    rdx                     </span><br><span class="line">push    rdx                     </span><br><span class="line">pop     rdx                     </span><br><span class="line">pop     rdx                     </span><br><span class="line">push    rcx                     </span><br><span class="line">jmp     loc_14001EE1F           </span><br><span class="line">push    rdx                     </span><br><span class="line">pop     rdx                     </span><br><span class="line">push    rbx                     </span><br><span class="line">pop     rbx                     </span><br><span class="line">pop     rcx                     </span><br><span class="line">jmp     sub_140071DE0           </span><br><span class="line">sub     rsp, 28h                </span><br><span class="line">jmp     loc_1400B5E68           </span><br><span class="line">push    rax                     </span><br><span class="line">jmp     loc_1400904F3           </span><br><span class="line">push    rdx                     </span><br><span class="line">push    rdx                     </span><br><span class="line">pop     rdx                     </span><br><span class="line">pop     rdx                     </span><br><span class="line">push    rax                     </span><br><span class="line">jmp     loc_140081972           </span><br><span class="line">push    rcx                     </span><br><span class="line">pop     rcx                     </span><br><span class="line">push    rbx                     </span><br><span class="line">pop     rbx                     </span><br><span class="line">pushfq                          </span><br><span class="line">jmp     loc_14007FBCE           </span><br><span class="line">push    rbx                     </span><br><span class="line">pop     rbx                     </span><br><span class="line">push    rax                     </span><br><span class="line">push    rax                     </span><br><span class="line">pushfq                          </span><br><span class="line">call    $+5                     </span><br><span class="line">pop     rax                     </span><br><span class="line">xor     rax, 6665h              </span><br><span class="line">mov     [rsp+58h+var_48], rax   </span><br><span class="line">popfq                           </span><br><span class="line">pop     rax                     </span><br><span class="line">jmp     sub_140079DBD           </span><br><span class="line">push    rcx                     </span><br><span class="line">pop     rcx                     </span><br><span class="line">push    rdx                     </span><br><span class="line">pop     rdx                     </span><br><span class="line">pop     rax                     </span><br><span class="line">jmp     sub_1400C9B65           </span><br><span class="line">push    rbx                     </span><br><span class="line">pop     rbx                     </span><br><span class="line">add     rax, 36F74h             </span><br><span class="line">jmp     loc_1400E169F           </span><br><span class="line">push    rcx                     </span><br><span class="line">push    rdx                     </span><br><span class="line">pop     rdx                     </span><br><span class="line">pop     rcx                     </span><br><span class="line">mov     [rsp+arg_8], rax        </span><br><span class="line">jmp     loc_14002BE91           </span><br><span class="line">push    rcx                     </span><br><span class="line">pop     rcx                     </span><br><span class="line">popfq                           </span><br><span class="line">jmp     loc_1400E2622           </span><br><span class="line">push    rbx                     </span><br><span class="line">pop     rbx                     </span><br><span class="line">pop     rax                     </span><br><span class="line">jmp     sub_1400F8E1D           </span><br><span class="line">push    rcx                     </span><br><span class="line">push    rbx                     </span><br><span class="line">pop     rbx                     </span><br><span class="line">pop     rcx                     </span><br><span class="line">retn                            </span><br></pre></td></tr></table></figure><p>这里就已经包含了两种混淆</p><p>一种是简单的 push reg &amp;&amp; pop reg 以及这种混淆的嵌套 例如 push push pop pop</p><p>但这都还算好 问题就在于push pop 中间添加了 jmp 使得之前使用的汇编特征码的方法失效</p><p>另一种跟第一种差不多 不过嵌套了一层 另一个问题也是中间加了 jmp</p><p>手动去掉jmp 再去掉没用的push pop 可以看见这种混淆大概长这样</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">push    rax                     </span><br><span class="line">push    rax                     </span><br><span class="line">pushfq                          </span><br><span class="line">push    rax                     </span><br><span class="line">push    rax                     </span><br><span class="line">pushfq                          </span><br><span class="line">call    $+5                     </span><br><span class="line">pop     rax                     </span><br><span class="line">xor     rax, 6665h              </span><br><span class="line">mov     [rsp+10h], rax   </span><br><span class="line">popfq                           </span><br><span class="line">pop     rax                     </span><br><span class="line">pop     rax                     </span><br><span class="line">add     rax, 36F74h             </span><br><span class="line">mov     [rsp+10h], rax        </span><br><span class="line">popfq                           </span><br><span class="line">pop     rax                     </span><br><span class="line">retn  </span><br></pre></td></tr></table></figure><p>特征还蛮明显的噢</p><p>接下来就是写脚本</p><p>但是这个脚本咋写呢 手动的情况下是先去掉 jmp</p><p>但是如果直接在程序里面把 jmp nop掉肯定是不行的 影响了程序流程的正常执行</p><p>那就在判断的时候把 jmp 忽略掉咯    也就是暂且先做下一步 去掉push pop</p><p>若是要人来判断 会怎么做这一步呢</p><p>是不是先找到一句pop 然后返回去找push</p><p>再比较两者操作的寄存器是否相同</p><p>而要实现这一点 其实就相当于写模拟执行</p><p>要执行的话 肯定不止执行一句</p><p>而如果要执行多句 肯定需要知道当前指令的长度 然后才能够跳到下一句执行</p><p>那先写一个 <code>getlen</code> 用于获取当前指令长度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getlen</span>(<span class="params">offset</span>):</span></span><br><span class="line">    p_op_len = &#123;</span><br><span class="line">    <span class="string">&quot;pop&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;push&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;popfq&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;pushfq&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;nop&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;retn&quot;</span> : <span class="number">1</span>,</span><br><span class="line">&#125;</span><br><span class="line">    p_asm = idc.GetDisasm(offset)</span><br><span class="line">    p_op  = p_asm.split(<span class="string">&#x27; &#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">    p_len = <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span>(p_op <span class="keyword">in</span> p_op_len):</span><br><span class="line">        <span class="keyword">while</span> p_asm == idc.GetDisasm(offset + p_len):</span><br><span class="line">            p_len += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> p_len</span><br></pre></td></tr></table></figure><p>这个 <code>getlen</code> 的原理呢 是一个指令如果已经被识别</p><p>给 <code>GetDisasm</code> 传的参如果不超过这一句的字节码 就一直会返回同一句汇编</p><p>用这个原理就需要特别掠过 1 字节的汇编指令</p><p>因为如果下一字节的汇编的指令与这一句的相同</p><p>就会误认为这一句指令的长度为 2</p><p>这种情况在这个程序里尤其多且不能够误判</p><p>比如两句push rax 误判的话栈都不平了</p><p>返回到上一步</p><p>之前说 ‘先找到一句pop 然后返回去找push’</p><p>这在模拟执行里面是很麻烦的</p><p>因为如果只根据反汇编 要去倒着找 似乎只能够把所有的步骤记录下来</p><p>那么把思路换一下</p><p>遇见 push 的时候 把操作的 reg 以及当前的 rip 储存起来</p><p>在下一次遇见 pop 的时候检查 reg 与上次 push 的是否相同</p><p>这样就可以完美解决如果上一句是 push reg 下一句 是 pop reg 的情况了</p><p>但是要是遇见嵌套的 push pop 一次是没法完美解决的</p><p>不过解决方法也很简单 多执行几次就行了</p><p>还要解决一下中间的 jmp </p><p>我开始想用 从反汇编中截取字符串 当作十六进制</p><p>比如 <code>jmp     loc_1400C446D</code> 直接把 1400C446D 截取出来赋值给 rip 指针</p><p>但是后面发现有的 jmp 反汇编成 <code>jmp xxx+xx</code> 的形式 于是决定还是用硬编码来计算跳转地址</p><p>在运行过程中还发现有的与寻常的字节码不一样</p><p>例如 <code>48 FF 25 19 68 F1 FF     jmp cs:TerminateProcess</code> </p><p>这种肯定不能真的计算到跳转地址去 还是直接掠过比较好</p><p>还有要注意正负的计算方式不一样</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calcjmp</span>(<span class="params">offset</span>):</span></span><br><span class="line">    __asm = idc.GetDisasm(offset)</span><br><span class="line">    <span class="keyword">if</span> ida_bytes.get_byte(offset) == <span class="number">0xE9</span>:</span><br><span class="line">        st = offset</span><br><span class="line">        f = ida_bytes.get_dword(st + <span class="number">1</span>) &amp; <span class="number">0x80000000</span></span><br><span class="line">        <span class="keyword">if</span> f == <span class="number">0x80000000</span>:</span><br><span class="line">            st = st - (<span class="number">0x100000000</span> - ida_bytes.get_dword(st + <span class="number">1</span>)) + <span class="number">5</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            st = st + ida_bytes.get_dword(st + <span class="number">1</span>) + <span class="number">5</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        st = offset + getlen(offset)</span><br><span class="line">    <span class="keyword">return</span> st</span><br></pre></td></tr></table></figure><p>有了上面的铺垫 可以写去push pop 的混淆了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fuckpush</span>(<span class="params">offset</span>):</span></span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    pat_count = <span class="number">0</span></span><br><span class="line">    debug = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> count &lt; <span class="number">5</span>:</span><br><span class="line">        st = offset</span><br><span class="line">        last = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        rip_push  = []</span><br><span class="line">        reg_push = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            flag = <span class="number">0</span></span><br><span class="line">            __asm  = idc.GetDisasm(st)</span><br><span class="line">            <span class="keyword">if</span> debug == <span class="number">1</span>:</span><br><span class="line">                <span class="built_in">print</span>(__asm)</span><br><span class="line">            op_len = getlen(st)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> __asm == <span class="string">&#x27;retn&#x27;</span>:</span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">            op  = __asm.split(<span class="string">&#x27; &#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">            reg = __asm.split(<span class="string">&#x27; &#x27;</span>)[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> op == <span class="string">&#x27;push&#x27;</span>:</span><br><span class="line">                rip_push.append(st)</span><br><span class="line">                reg_push.append(reg)</span><br><span class="line">                last = <span class="string">&#x27;push&#x27;</span></span><br><span class="line">                flag = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">elif</span> op == <span class="string">&#x27;pop&#x27;</span>:</span><br><span class="line">                <span class="keyword">if</span> last == <span class="string">&#x27;push&#x27;</span>:</span><br><span class="line">                    <span class="keyword">if</span> reg == reg_push[-<span class="number">1</span>]:</span><br><span class="line">                        <span class="keyword">if</span> debug == <span class="number">1</span>:</span><br><span class="line">                            <span class="built_in">print</span>(<span class="string">&quot;patch &quot;</span> + <span class="built_in">str</span>(<span class="built_in">hex</span>(rip_push[-<span class="number">1</span>])) + <span class="string">&quot; + &quot;</span> + <span class="built_in">str</span>(<span class="built_in">hex</span>(st)))</span><br><span class="line">                        ida_bytes.patch_byte(rip_push[-<span class="number">1</span>],<span class="number">0x90</span>)</span><br><span class="line">                        ida_bytes.patch_byte(st,<span class="number">0x90</span>)</span><br><span class="line">                        pat_count += <span class="number">1</span></span><br><span class="line">                    flag = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> op == <span class="string">&#x27;jmp&#x27;</span>:</span><br><span class="line">                st = calcjmp(st)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> __asm != <span class="string">&#x27;nop&#x27;</span>:</span><br><span class="line">                    <span class="keyword">if</span> flag == <span class="number">0</span>:</span><br><span class="line">                        last = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                st += op_len</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;fuck &quot;</span> + <span class="built_in">str</span>(pat_count) + <span class="string">&quot; pairs of &#x27;push pop&#x27;&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> pat_count</span><br></pre></td></tr></table></figure><p>去掉了 push pop 之后 同样是比较特征之后 nop 相应代码并修改执行流程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fuckret</span>(<span class="params">offset,debug=<span class="number">0</span></span>):</span></span><br><span class="line">    table = [<span class="string">&#x27;push&#x27;</span>,<span class="string">&#x27;push&#x27;</span>,<span class="string">&#x27;pushfq&#x27;</span>,<span class="string">&#x27;push&#x27;</span>,<span class="string">&#x27;push&#x27;</span>,<span class="string">&#x27;pushfq&#x27;</span>,<span class="string">&#x27;call&#x27;</span>,<span class="string">&#x27;pop&#x27;</span>,<span class="string">&#x27;xor&#x27;</span>,<span class="string">&#x27;mov&#x27;</span>,<span class="string">&#x27;popfq&#x27;</span>,<span class="string">&#x27;pop&#x27;</span>,<span class="string">&#x27;pop&#x27;</span>,<span class="string">&#x27;add&#x27;</span>,<span class="string">&#x27;mov&#x27;</span>,<span class="string">&#x27;popfq&#x27;</span>,<span class="string">&#x27;pop&#x27;</span>,<span class="string">&#x27;retn&#x27;</span>]</span><br><span class="line">    st = offset</span><br><span class="line">    fkcnt = <span class="number">0</span></span><br><span class="line">    fkpus = <span class="number">0</span></span><br><span class="line">    fkpus += fuckpush(st)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        __asm = idc.GetDisasm(st)</span><br><span class="line">        <span class="keyword">if</span> debug == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">if</span> __asm != <span class="string">&#x27;nop&#x27;</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;out : &quot;</span> + <span class="built_in">str</span>(<span class="built_in">hex</span>(st)) ,end=<span class="string">&#x27;\t&#x27;</span>)</span><br><span class="line">                <span class="built_in">print</span>(__asm)</span><br><span class="line"></span><br><span class="line">        op_len = getlen(st)</span><br><span class="line">        op  = __asm.split(<span class="string">&#x27; &#x27;</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> op == <span class="string">&#x27;push&#x27;</span>:</span><br><span class="line">            <span class="keyword">if</span> debug == <span class="number">1</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            asmrip  = []</span><br><span class="line">            lastjmp = <span class="number">0</span></span><br><span class="line">            op_cnt  = <span class="number">0</span></span><br><span class="line">            st_in   = st</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                __asm = idc.GetDisasm(st)</span><br><span class="line">                <span class="keyword">if</span> debug == <span class="number">1</span>:</span><br><span class="line">                    <span class="keyword">if</span> __asm != <span class="string">&#x27;nop&#x27;</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&quot;inn : &quot;</span> + <span class="built_in">str</span>(<span class="built_in">hex</span>(st)) ,end=<span class="string">&#x27;\t&#x27;</span>)</span><br><span class="line">                        <span class="built_in">print</span>(__asm)</span><br><span class="line"></span><br><span class="line">                op_len = getlen(st) </span><br><span class="line">                op = __asm.split(<span class="string">&#x27; &#x27;</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> op == <span class="string">&#x27;jmp&#x27;</span>:</span><br><span class="line">                    lastjmp = st</span><br><span class="line">                    st = calcjmp(st)</span><br><span class="line">                <span class="keyword">elif</span> op == <span class="string">&#x27;nop&#x27;</span>:</span><br><span class="line">                    st += <span class="number">1</span></span><br><span class="line">                <span class="keyword">elif</span> op == table[op_cnt]:</span><br><span class="line">                    asmrip.append(st)</span><br><span class="line">                    st += op_len</span><br><span class="line">                    op_cnt += <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    st = st_in + <span class="number">1</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> op_cnt == <span class="number">18</span>:</span><br><span class="line">                    <span class="keyword">if</span> ida_bytes.get_byte(lastjmp) != <span class="number">0xE9</span>:</span><br><span class="line">                        st = st_in + <span class="number">1</span></span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                    <span class="keyword">if</span> debug == <span class="number">1</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&quot;rip : &quot;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">                        <span class="keyword">for</span> sb <span class="keyword">in</span> asmrip:</span><br><span class="line">                            <span class="built_in">print</span>(<span class="built_in">str</span>(<span class="built_in">hex</span>(sb)) + <span class="string">&#x27;,&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                    calladdr = asmrip[<span class="number">6</span>]                    <span class="comment">#getshell</span></span><br><span class="line">                    xored    = ida_bytes.get_dword(asmrip[<span class="number">8</span>] + <span class="number">2</span>)</span><br><span class="line">                    added    = ida_bytes.get_dword(asmrip[<span class="number">13</span>] + <span class="number">2</span>)</span><br><span class="line">                    <span class="keyword">if</span> added &gt; <span class="number">0x7fffffff</span>:</span><br><span class="line">                        added = -(<span class="number">0x100000000</span> - added)</span><br><span class="line">                    jmp_addr = ( (calladdr + <span class="number">5</span>) ^ xored ) + added</span><br><span class="line">                    <span class="keyword">if</span> lastjmp &gt; jmp_addr:</span><br><span class="line">                        asmret = <span class="number">0xFFFFFFFF</span> - (lastjmp + <span class="number">5</span> - jmp_addr) +<span class="number">1</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        asmret = jmp_addr - (lastjmp + <span class="number">5</span>)</span><br><span class="line">                    shell = [<span class="string">&#x27;&#x27;</span>] * <span class="number">5</span></span><br><span class="line">                    shell[<span class="number">0</span>] = <span class="number">0xe9</span></span><br><span class="line">                    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">                        shell[j+<span class="number">1</span>] = (asmret &amp; (<span class="number">0xff</span> &lt;&lt; j*<span class="number">8</span>)) &gt;&gt; j * <span class="number">8</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span> killd <span class="keyword">in</span> asmrip:                    <span class="comment">#clear rubbish</span></span><br><span class="line">                        kil_op_len = getlen(killd)</span><br><span class="line">                        <span class="keyword">for</span> kil_i <span class="keyword">in</span> <span class="built_in">range</span>(kil_op_len):</span><br><span class="line">                            ida_bytes.patch_byte( killd + kil_i, <span class="number">0x90</span>)</span><br><span class="line">                            kil_i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> debug == <span class="number">1</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;from &#x27;</span> + <span class="built_in">str</span>(<span class="built_in">hex</span>(asmrip[<span class="number">0</span>])) + <span class="string">&#x27; to &#x27;</span> + <span class="built_in">str</span>(<span class="built_in">hex</span>(asmrip[-<span class="number">1</span>])) + <span class="string">&#x27; be patched&#x27;</span>)</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;from &#x27;</span> + <span class="built_in">str</span>(<span class="built_in">hex</span>(lastjmp)) + <span class="string">&#x27; jmp to &#x27;</span> + <span class="built_in">str</span>(<span class="built_in">hex</span>(jmp_addr)))</span><br><span class="line">                    mypatch(lastjmp,shell)<span class="comment">#patch jmp</span></span><br><span class="line">                    fkcnt += <span class="number">1</span></span><br><span class="line">                    st = lastjmp</span><br><span class="line">                    </span><br><span class="line">                    <span class="keyword">if</span> debug == <span class="number">1</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                    fkpus += fuckpush(st)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> op == <span class="string">&#x27;jmp&#x27;</span>:</span><br><span class="line">            st = calcjmp(st)</span><br><span class="line">        <span class="keyword">elif</span> op == <span class="string">&#x27;retn&#x27;</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;fuck &quot;</span> + <span class="built_in">str</span>(fkcnt) + <span class="string">&quot; pairs of &#x27;pop ret&#x27;&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> fkcnt + fkpus</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            st += op_len</span><br></pre></td></tr></table></figure><p>不过我写的逻辑是直到不能够处理的 retn 就停下来</p><p>所以只能够先 trace 一遍有混淆的</p><p>再写个脚本把 retn 下一行的代码的地址提取出来(大部分都可以这样解决</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os, time, sys, re</span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&quot;./trace1.txt&quot;</span>,encoding=<span class="string">&quot;utf8&quot;</span>)</span><br><span class="line">key = <span class="string">&quot;ret&quot;</span></span><br><span class="line">flag = <span class="number">0</span></span><br><span class="line">sb = []</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> file.readlines():</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> flag == <span class="number">1</span>:</span><br><span class="line">        ssb = <span class="built_in">int</span>(line.split(<span class="string">&#x27;|&#x27;</span>)[<span class="number">1</span>].strip(),<span class="number">16</span>)</span><br><span class="line">        <span class="keyword">if</span> ssb &lt; <span class="number">0x200000000</span>:</span><br><span class="line">            sb.append(ssb)</span><br><span class="line">        flag = <span class="number">0</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> key <span class="keyword">in</span> line:</span><br><span class="line">        flag = <span class="number">1</span></span><br><span class="line">file.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> sb:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">str</span>(<span class="built_in">hex</span>(i)),end=<span class="string">&#x27;,&#x27;</span>)</span><br></pre></td></tr></table></figure><p>后面一边 trace 一边 patch 不过我直接把我 patch 完的所有有效地址写上吧 可以省掉大家很多复现的时间</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">fucklist=[<span class="number">0x14004085a</span>,<span class="number">0x1400224c8</span>,<span class="number">0x1400424a2</span>,<span class="number">0x1400dfcb1</span>,<span class="number">0x14001206c</span>,<span class="number">0x140019e2e</span>,<span class="number">0x14001f509</span>,<span class="number">0x14007a881</span>,<span class="number">0x140097094</span>,<span class="number">0x140026507</span>,<span class="number">0x1400c07b3</span>,<span class="number">0x1400a17bf</span>,<span class="number">0x1400eed90</span>,<span class="number">0x140041d1f</span>,<span class="number">0x140049ec5</span>,<span class="number">0x140068125</span>,<span class="number">0x14008874d</span>,<span class="number">0x14003d3a8</span>,<span class="number">0x1400ba55e</span>,<span class="number">0x1400b4dc9</span>,<span class="number">0x14009480a</span>,<span class="number">0x1400d1602</span>,<span class="number">0x1400db842</span>,<span class="number">0x14008a584</span>,<span class="number">0x14007cfa7</span>,<span class="number">0x140035884</span>,<span class="number">0x14000f9e9</span>,<span class="number">0x1400e63a4</span>,<span class="number">0x1400c3492</span>,<span class="number">0x1400143c9</span>,<span class="number">0x1400e1d72</span>,<span class="number">0x14009e7f0</span>,<span class="number">0x140032c3c</span>,<span class="number">0x140033e50</span>,<span class="number">0x14009881b</span>,<span class="number">0x1400308b6</span>,<span class="number">0x1400beea3</span>,<span class="number">0x14004460b</span>,<span class="number">0x1400bcb75</span>,<span class="number">0x1400b0cdc</span>,<span class="number">0x14005edb0</span>,<span class="number">0x14007de2e</span>,<span class="number">0x140086a9f</span>,<span class="number">0x1400f575b</span>,<span class="number">0x140017f67</span>,<span class="number">0x14008e5cd</span>,<span class="number">0x140030dea</span>,<span class="number">0x1400adcb7</span>,<span class="number">0x1400857c4</span>,<span class="number">0x1400025b9</span>,<span class="number">0x1400b6283</span>,<span class="number">0x1400ac98b</span>,<span class="number">0x1400d22ff</span>,<span class="number">0x14004e3ca</span>,<span class="number">0x140099671</span>,<span class="number">0x140099677</span>,<span class="number">0x14000391a</span>,<span class="number">0x14007c539</span>,<span class="number">0x1400bb3c7</span>,<span class="number">0x14008f046</span>,<span class="number">0x1400a978f</span>,<span class="number">0x14009b70f</span>,<span class="number">0x1400a6b74</span>,<span class="number">0x140045f2e</span>,<span class="number">0x140037db2</span>,<span class="number">0x140021128</span>,<span class="number">0x1400e549d</span>,<span class="number">0x140088782</span>,<span class="number">0x140069be7</span>,<span class="number">0x14004c42b</span>,<span class="number">0x140044fae</span>,<span class="number">0x1400533d0</span>,<span class="number">0x14006bf6a</span>,<span class="number">0x1400a0c6c</span>,<span class="number">0x14003a608</span>,<span class="number">0x14001cae6</span>,<span class="number">0x1400f63e6</span>,<span class="number">0x1400affb6</span>,<span class="number">0x14000d8f7</span>,<span class="number">0x14003f111</span>,<span class="number">0x140046bcf</span>,<span class="number">0x140066b81</span>,<span class="number">0x14006734f</span>,<span class="number">0x140063405</span>,<span class="number">0x14005c245</span>,<span class="number">0x1400a8f62</span>,<span class="number">0x140050474</span>,<span class="number">0x14006b372</span>,<span class="number">0x1400e9fea</span>,<span class="number">0x1400f5667</span>,<span class="number">0x1400ba5aa</span>,<span class="number">0x140021277</span>,<span class="number">0x1400f8634</span>,<span class="number">0x1400bcce5</span>,<span class="number">0x1400386f9</span>,<span class="number">0x1400f5741</span>,<span class="number">0x140040fed</span>,<span class="number">0x1400ae5a0</span>,<span class="number">0x1400de1b6</span>,<span class="number">0x1400127b9</span>,<span class="number">0x1400afa4c</span>,<span class="number">0x14009cbfe</span>,<span class="number">0x14004d06f</span>,<span class="number">0x1400f74bb</span>,<span class="number">0x1400b0bad</span>,<span class="number">0x1400aa0b4</span>,<span class="number">0x1400e86dc</span>,<span class="number">0x14003d6b8</span>,<span class="number">0x1400407ed</span>,<span class="number">0x1400ee996</span>,<span class="number">0x14006b83d</span>,<span class="number">0x1400932f0</span>,<span class="number">0x14001c061</span>,<span class="number">0x140020e62</span>,<span class="number">0x14007c505</span>,<span class="number">0x14004c19b</span>,<span class="number">0x1400403f6</span>,<span class="number">0x14003d086</span>,<span class="number">0x1400609dd</span>,<span class="number">0x1400645e4</span>,<span class="number">0x14002ade3</span>,<span class="number">0x1400201b3</span>,<span class="number">0x1400585f8</span>,<span class="number">0x1400344a2</span>,<span class="number">0x14003746d</span>,<span class="number">0x140093ae9</span>,<span class="number">0x1400f8f00</span>,<span class="number">0x14003cb4b</span>,<span class="number">0x1400a0472</span>,<span class="number">0x14004cc27</span>,<span class="number">0x1400a720f</span>,<span class="number">0x140062b19</span>,<span class="number">0x1400d7e9d</span>,<span class="number">0x140035b53</span>,<span class="number">0x1400489eb</span>,<span class="number">0x1400c93d1</span>,<span class="number">0x140049b13</span>,<span class="number">0x1400b6994</span>,<span class="number">0x1400dc2a0</span>,<span class="number">0x1400b1d93</span>,<span class="number">0x14007a048</span>,<span class="number">0x1400bbdb4</span>,<span class="number">0x140093534</span>,<span class="number">0x1400a939a</span>,<span class="number">0x140065701</span>,<span class="number">0x1400ac86b</span>,<span class="number">0x14003c7f8</span>,<span class="number">0x1400b2b4d</span>,<span class="number">0x1400e5d05</span>,<span class="number">0x1400c9ee6</span>,<span class="number">0x1400961bf</span>,<span class="number">0x1400d1abe</span>,<span class="number">0x1400e6ac8</span>,<span class="number">0x1400c8f1f</span>,<span class="number">0x14005e050</span>,<span class="number">0x140095e85</span>,<span class="number">0x1400610a1</span>,<span class="number">0x14003a0b5</span>,<span class="number">0x1400cda74</span>,<span class="number">0x14009367b</span>,<span class="number">0x1400c26a0</span>,<span class="number">0x1400b3149</span>,<span class="number">0x140024323</span>,<span class="number">0x14000234c</span>,<span class="number">0x1400175a1</span>,<span class="number">0x14001a8f0</span>,<span class="number">0x1400a1493</span>,<span class="number">0x140052dc1</span>,<span class="number">0x1400cfa4f</span>,<span class="number">0x1400c82e5</span>,<span class="number">0x14008e488</span>,<span class="number">0x140026895</span>,<span class="number">0x1400d667c</span>,<span class="number">0x14002cd55</span>,<span class="number">0x1400f5c45</span>,<span class="number">0x14008bf75</span>,<span class="number">0x140010075</span>,<span class="number">0x1400190b3</span>,<span class="number">0x1400de7d0</span>,<span class="number">0x14008d5d4</span>,<span class="number">0x1400e4a0c</span>,<span class="number">0x1400a7382</span>,<span class="number">0x140037876</span>,<span class="number">0x1400d5016</span>,<span class="number">0x1400c7b84</span>,<span class="number">0x14003ad82</span>,<span class="number">0x140065331</span>,<span class="number">0x140013029</span>,<span class="number">0x1400b4f3a</span>,<span class="number">0x14008c9ee</span>,<span class="number">0x1400c376e</span>,<span class="number">0x1400f95db</span>,<span class="number">0x14003eb8e</span>,<span class="number">0x140070774</span>,<span class="number">0x140051198</span>,<span class="number">0x1400bd38a</span>,<span class="number">0x14008c893</span>,<span class="number">0x140041e14</span>,<span class="number">0x140092f4a</span>,<span class="number">0x1400e487b</span>,<span class="number">0x1400f75f6</span>,<span class="number">0x140021d1b</span>,<span class="number">0x140013251</span>,<span class="number">0x14005047c</span>,<span class="number">0x140028abd</span>,<span class="number">0x1400e5392</span>,<span class="number">0x1400a8349</span>,<span class="number">0x14007619b</span>,<span class="number">0x14004cfaf</span>,<span class="number">0x140051b04</span>,<span class="number">0x140020bc7</span>,<span class="number">0x1400122e2</span>,<span class="number">0x140079ad8</span>,<span class="number">0x1400c5aa9</span>,<span class="number">0x14008fdb8</span>,<span class="number">0x1400b6b57</span>,<span class="number">0x1400ef67c</span>,<span class="number">0x14008239c</span>,<span class="number">0x14008f521</span>,<span class="number">0x140084df2</span>,<span class="number">0x1400d203c</span>,<span class="number">0x1400108a1</span>,<span class="number">0x1400e399d</span>,<span class="number">0x140021f1c</span>,<span class="number">0x14001d98f</span>,<span class="number">0x1400d9e3c</span>,<span class="number">0x1400a86dd</span>,<span class="number">0x1400ce809</span>,<span class="number">0x140032394</span>,<span class="number">0x140093660</span>,<span class="number">0x14001f168</span>,<span class="number">0x14009aabc</span>,<span class="number">0x1400ed298</span>,<span class="number">0x1400dc6f5</span>,<span class="number">0x140002691</span>,<span class="number">0x1400b603b</span>,<span class="number">0x14009c76a</span>,<span class="number">0x140053a4f</span>,<span class="number">0x1400411dc</span>,<span class="number">0x1400411e2</span>,<span class="number">0x1400cf6b9</span>,<span class="number">0x140049b81</span>,<span class="number">0x140053fcb</span>,<span class="number">0x1400fa16d</span>,<span class="number">0x14001d49c</span>,<span class="number">0x14002d10f</span>,<span class="number">0x14009644f</span>,<span class="number">0x140068922</span>,<span class="number">0x1400f734a</span>,<span class="number">0x1400195f6</span>,<span class="number">0x1400b932b</span>,<span class="number">0x1400a7f82</span>,<span class="number">0x140020c11</span>,<span class="number">0x1400d1807</span>,<span class="number">0x14006b86f</span>,<span class="number">0x1400a0e4f</span>,<span class="number">0x140033127</span>,<span class="number">0x1400db36d</span>,<span class="number">0x14005cf3b</span>,<span class="number">0x14005d401</span>,<span class="number">0x1400d70e7</span>,<span class="number">0x14006b0e0</span>,<span class="number">0x14009b72b</span>,<span class="number">0x14004f9a3</span>,<span class="number">0x1400cb0a9</span>,<span class="number">0x1400d9db0</span>,<span class="number">0x1400677e0</span>,<span class="number">0x1400113c0</span>,<span class="number">0x1400e0c75</span>,<span class="number">0x140042cfe</span>,<span class="number">0x14000bcd7</span>,<span class="number">0x14009a73b</span>,<span class="number">0x1400b0a29</span>,<span class="number">0x1400a25e7</span>,<span class="number">0x1400de3af</span>,<span class="number">0x140097af0</span>,<span class="number">0x14000b885</span>,<span class="number">0x1400e2a2a</span>,<span class="number">0x1400fa18e</span>,<span class="number">0x1400017a2</span>,<span class="number">0x1400f7e0d</span>,<span class="number">0x1400e08ef</span>,<span class="number">0x14008b954</span>,<span class="number">0x140039307</span>,<span class="number">0x140080b6f</span>,<span class="number">0x140017839</span>,<span class="number">0x140062a08</span>,<span class="number">0x140019442</span>,<span class="number">0x1400b5921</span>,<span class="number">0x140011462</span>,<span class="number">0x1400f9d12</span>,<span class="number">0x1400d91a0</span>,<span class="number">0x140012fa9</span>,<span class="number">0x140067ef0</span>,<span class="number">0x1400b7c3d</span>,<span class="number">0x1400752dd</span>,<span class="number">0x14002715b</span>,<span class="number">0x140010b61</span>,<span class="number">0x1400e9d43</span>,<span class="number">0x1400f0464</span>,<span class="number">0x1400ded5f</span>,<span class="number">0x1400843dd</span>,<span class="number">0x1400843e1</span>,<span class="number">0x14008020d</span>,<span class="number">0x140028484</span>,<span class="number">0x1400f8380</span>,<span class="number">0x140053e38</span>,<span class="number">0x140036180</span>,<span class="number">0x140080d39</span>,<span class="number">0x1400a6c18</span>,<span class="number">0x1400b6324</span>,<span class="number">0x1400de837</span>,<span class="number">0x1400a7352</span>,<span class="number">0x14007cd16</span>,<span class="number">0x1400f0f20</span>,<span class="number">0x14007cfdd</span>,<span class="number">0x14009002f</span>,<span class="number">0x140080a00</span>,<span class="number">0x1400f1551</span>,<span class="number">0x1400be82f</span>,<span class="number">0x1400a9650</span>,<span class="number">0x1400f84de</span>,<span class="number">0x140017f67</span>,<span class="number">0x14008e5cd</span>,<span class="number">0x140030dea</span>,<span class="number">0x1400adcb7</span>,<span class="number">0x1400857c4</span>,<span class="number">0x1400025b9</span>,<span class="number">0x1400b6283</span>,<span class="number">0x1400ac98b</span>,<span class="number">0x1400d22ff</span>,<span class="number">0x14004e3ca</span>,<span class="number">0x140099671</span>,<span class="number">0x140099677</span>,<span class="number">0x14000391a</span>,<span class="number">0x14007c539</span>,<span class="number">0x1400bb3c7</span>,<span class="number">0x14008f046</span>,<span class="number">0x1400a978f</span>,<span class="number">0x14009b70f</span>,<span class="number">0x1400a6b74</span>,<span class="number">0x140045f2e</span>,<span class="number">0x140037db2</span>,<span class="number">0x140021128</span>,<span class="number">0x1400e549d</span>,<span class="number">0x140088782</span>,<span class="number">0x140069be7</span>,<span class="number">0x1400021e4</span>,<span class="number">0x14005f397</span>,<span class="number">0x140064bf6</span>,<span class="number">0x140025c2d</span>,<span class="number">0x140017f67</span>,<span class="number">0x14008e5cd</span>,<span class="number">0x140030dea</span>,<span class="number">0x1400adcb7</span>,<span class="number">0x1400857c4</span>,<span class="number">0x1400025b9</span>,<span class="number">0x1400b6283</span>,<span class="number">0x1400ac98b</span>,<span class="number">0x1400d22ff</span>,<span class="number">0x14004e3ca</span>,<span class="number">0x140099671</span>,<span class="number">0x140099677</span>,<span class="number">0x14000391a</span>,<span class="number">0x14007c539</span>,<span class="number">0x1400bb3c7</span>,<span class="number">0x14008f046</span>,<span class="number">0x1400a978f</span>,<span class="number">0x14009b70f</span>,<span class="number">0x1400a6b74</span>,<span class="number">0x140045f2e</span>,<span class="number">0x140037db2</span>,<span class="number">0x140021128</span>,<span class="number">0x1400e549d</span>,<span class="number">0x140088782</span>,<span class="number">0x140069be7</span>,<span class="number">0x1400ce142</span>,<span class="number">0x140076982</span>,<span class="number">0x1400453d7</span>,<span class="number">0x140078961</span>,<span class="number">0x1400a0c6c</span>,<span class="number">0x14003a608</span>,<span class="number">0x14001cae6</span>,<span class="number">0x1400f63e6</span>,<span class="number">0x1400affb6</span>,<span class="number">0x14000d8f7</span>,<span class="number">0x14003f111</span>,<span class="number">0x140046bcf</span>,<span class="number">0x140066b81</span>,<span class="number">0x14006734f</span>,<span class="number">0x140063405</span>,<span class="number">0x14005c245</span>,<span class="number">0x1400a8f62</span>,<span class="number">0x140050474</span>,<span class="number">0x14006b372</span>,<span class="number">0x1400e9fea</span>,<span class="number">0x1400f5667</span>,<span class="number">0x1400ba5aa</span>,<span class="number">0x140021277</span>,<span class="number">0x1400f8634</span>,<span class="number">0x1400bcce5</span>,<span class="number">0x1400386f9</span>,<span class="number">0x1400f5741</span>,<span class="number">0x140040fed</span>,<span class="number">0x1400ae5a0</span>,<span class="number">0x1400de1b6</span>,<span class="number">0x1400127b9</span>,<span class="number">0x1400afa4c</span>,<span class="number">0x14009cbfe</span>,<span class="number">0x14004d06f</span>,<span class="number">0x1400f74bb</span>,<span class="number">0x1400b0bad</span>,<span class="number">0x1400aa0b4</span>,<span class="number">0x1400e86dc</span>,<span class="number">0x14003d6b8</span>,<span class="number">0x1400407ed</span>,<span class="number">0x1400ee996</span>,<span class="number">0x14006b83d</span>,<span class="number">0x1400932f0</span>,<span class="number">0x14001c061</span>,<span class="number">0x140020e62</span>,<span class="number">0x14007c505</span>,<span class="number">0x14004c19b</span>,<span class="number">0x1400403f6</span>,<span class="number">0x14003d086</span>,<span class="number">0x1400609dd</span>,<span class="number">0x1400645e4</span>,<span class="number">0x14002ade3</span>,<span class="number">0x1400201b3</span>,<span class="number">0x1400585f8</span>,<span class="number">0x1400344a2</span>,<span class="number">0x14003746d</span>,<span class="number">0x140093ae9</span>,<span class="number">0x1400f8f00</span>,<span class="number">0x14003cb4b</span>,<span class="number">0x1400a0472</span>,<span class="number">0x14004cc27</span>,<span class="number">0x1400a720f</span>,<span class="number">0x140062b19</span>,<span class="number">0x1400d7e9d</span>,<span class="number">0x140035b53</span>,<span class="number">0x1400489eb</span>,<span class="number">0x1400c93d1</span>,<span class="number">0x140049b13</span>,<span class="number">0x1400b6994</span>,<span class="number">0x1400dc2a0</span>,<span class="number">0x1400b1d93</span>,<span class="number">0x14007a048</span>,<span class="number">0x1400bbdb4</span>,<span class="number">0x140093534</span>,<span class="number">0x1400a939a</span>,<span class="number">0x140065701</span>,<span class="number">0x1400ac86b</span>,<span class="number">0x14003c7f8</span>,<span class="number">0x1400b2b4d</span>,<span class="number">0x1400e5d05</span>,<span class="number">0x1400c9ee6</span>,<span class="number">0x1400961bf</span>,<span class="number">0x1400d1abe</span>,<span class="number">0x1400e6ac8</span>,<span class="number">0x1400c8f1f</span>,<span class="number">0x14005e050</span>,<span class="number">0x140095e85</span>,<span class="number">0x1400610a1</span>,<span class="number">0x14003a0b5</span>,<span class="number">0x1400cda74</span>,<span class="number">0x14009367b</span>,<span class="number">0x1400c26a0</span>,<span class="number">0x1400b3149</span>,<span class="number">0x140024323</span>,<span class="number">0x14000234c</span>,<span class="number">0x1400175a1</span>,<span class="number">0x14001a8f0</span>,<span class="number">0x1400a1493</span>,<span class="number">0x140052dc1</span>,<span class="number">0x1400cfa4f</span>,<span class="number">0x1400c82e5</span>,<span class="number">0x14008e488</span>,<span class="number">0x140026895</span>,<span class="number">0x1400d667c</span>,<span class="number">0x14002cd55</span>,<span class="number">0x1400f5c45</span>,<span class="number">0x14008bf75</span>,<span class="number">0x140010075</span>,<span class="number">0x1400190b3</span>,<span class="number">0x1400de7d0</span>,<span class="number">0x14008d5d4</span>,<span class="number">0x1400e4a0c</span>,<span class="number">0x1400a7382</span>,<span class="number">0x140037876</span>,<span class="number">0x1400d5016</span>,<span class="number">0x1400c7b84</span>,<span class="number">0x14003ad82</span>,<span class="number">0x140065331</span>,<span class="number">0x140013029</span>,<span class="number">0x1400b4f3a</span>,<span class="number">0x14008c9ee</span>,<span class="number">0x1400c376e</span>,<span class="number">0x1400f95db</span>,<span class="number">0x14003eb8e</span>,<span class="number">0x140070774</span>,<span class="number">0x140051198</span>,<span class="number">0x1400bd38a</span>,<span class="number">0x14008c893</span>,<span class="number">0x140041e14</span>,<span class="number">0x140092f4a</span>,<span class="number">0x1400e487b</span>,<span class="number">0x1400f75f6</span>,<span class="number">0x140021d1b</span>,<span class="number">0x140013251</span>,<span class="number">0x14005047c</span>,<span class="number">0x140028abd</span>,<span class="number">0x1400e5392</span>,<span class="number">0x1400a8349</span>,<span class="number">0x14007619b</span>,<span class="number">0x14004cfaf</span>,<span class="number">0x140051b04</span>,<span class="number">0x140020bc7</span>,<span class="number">0x1400122e2</span>,<span class="number">0x140079ad8</span>,<span class="number">0x1400c5aa9</span>,<span class="number">0x14008fdb8</span>,<span class="number">0x1400b6b57</span>,<span class="number">0x1400ef67c</span>,<span class="number">0x14008239c</span>,<span class="number">0x14008f521</span>,<span class="number">0x140084df2</span>,<span class="number">0x1400d203c</span>,<span class="number">0x1400108a1</span>,<span class="number">0x1400e399d</span>,<span class="number">0x140021f1c</span>,<span class="number">0x14001d98f</span>,<span class="number">0x1400d9e3c</span>,<span class="number">0x1400a86dd</span>,<span class="number">0x1400ce809</span>,<span class="number">0x140032394</span>,<span class="number">0x140093660</span>,<span class="number">0x14001f168</span>,<span class="number">0x14009aabc</span>,<span class="number">0x1400ed298</span>,<span class="number">0x1400dc6f5</span>,<span class="number">0x140002691</span>,<span class="number">0x1400b603b</span>,<span class="number">0x14009c76a</span>,<span class="number">0x140053a4f</span>,<span class="number">0x1400411dc</span>,<span class="number">0x1400411e2</span>,<span class="number">0x1400cf6b9</span>,<span class="number">0x140049b81</span>,<span class="number">0x140053fcb</span>,<span class="number">0x1400fa16d</span>,<span class="number">0x14001d49c</span>,<span class="number">0x14002d10f</span>,<span class="number">0x14009644f</span>,<span class="number">0x140068922</span>,<span class="number">0x1400f734a</span>,<span class="number">0x1400195f6</span>,<span class="number">0x1400b932b</span>,<span class="number">0x1400a7f82</span>,<span class="number">0x140020c11</span>,<span class="number">0x1400d1807</span>,<span class="number">0x14006b86f</span>,<span class="number">0x1400a0e4f</span>,<span class="number">0x140033127</span>,<span class="number">0x1400db36d</span>,<span class="number">0x14005cf3b</span>,<span class="number">0x14005d401</span>,<span class="number">0x1400d70e7</span>,<span class="number">0x14006b0e0</span>,<span class="number">0x14009b72b</span>,<span class="number">0x14004f9a3</span>,<span class="number">0x1400cb0a9</span>,<span class="number">0x1400d9db0</span>,<span class="number">0x1400677e0</span>,<span class="number">0x1400113c0</span>,<span class="number">0x1400e0c75</span>,<span class="number">0x140042cfe</span>,<span class="number">0x14000bcd7</span>,<span class="number">0x14009a73b</span>,<span class="number">0x1400b0a29</span>,<span class="number">0x1400a25e7</span>,<span class="number">0x1400de3af</span>,<span class="number">0x140097af0</span>,<span class="number">0x14000b885</span>,<span class="number">0x1400e2a2a</span>,<span class="number">0x1400fa18e</span>,<span class="number">0x1400017a2</span>,<span class="number">0x1400f7e0d</span>,<span class="number">0x1400e08ef</span>,<span class="number">0x14008b954</span>,<span class="number">0x140039307</span>,<span class="number">0x140080b6f</span>,<span class="number">0x140017839</span>,<span class="number">0x140062a08</span>,<span class="number">0x140019442</span>,<span class="number">0x1400b5921</span>,<span class="number">0x140011462</span>,<span class="number">0x1400f9d12</span>,<span class="number">0x1400d91a0</span>,<span class="number">0x140012fa9</span>,<span class="number">0x140067ef0</span>,<span class="number">0x1400b7c3d</span>,<span class="number">0x1400752dd</span>,<span class="number">0x14002715b</span>,<span class="number">0x140010b61</span>,<span class="number">0x1400e9d43</span>,<span class="number">0x1400f0464</span>,<span class="number">0x1400ded5f</span>,<span class="number">0x1400843dd</span>,<span class="number">0x1400843e1</span>,<span class="number">0x14008020d</span>,<span class="number">0x140028484</span>,<span class="number">0x1400f8380</span>,<span class="number">0x140053e38</span>,<span class="number">0x140036180</span>,<span class="number">0x140080d39</span>,<span class="number">0x1400a6c18</span>,<span class="number">0x1400b6324</span>,<span class="number">0x1400de837</span>,<span class="number">0x1400a7352</span>,<span class="number">0x14007cd16</span>,<span class="number">0x1400f0f20</span>,<span class="number">0x14007cfdd</span>,<span class="number">0x14009002f</span>,<span class="number">0x140080a00</span>,<span class="number">0x1400f1551</span>,<span class="number">0x14006fb9d</span>,<span class="number">0x140013ffa</span>,<span class="number">0x140064e88</span>,<span class="number">0x140017f67</span>,<span class="number">0x14008e5cd</span>,<span class="number">0x140030dea</span>,<span class="number">0x1400adcb7</span>,<span class="number">0x1400857c4</span>,<span class="number">0x1400025b9</span>,<span class="number">0x1400b6283</span>,<span class="number">0x1400ac98b</span>,<span class="number">0x1400d22ff</span>,<span class="number">0x14004e3ca</span>,<span class="number">0x140099671</span>,<span class="number">0x140099677</span>,<span class="number">0x14000391a</span>,<span class="number">0x14007c539</span>,<span class="number">0x1400bb3c7</span>,<span class="number">0x14008f046</span>,<span class="number">0x1400a978f</span>,<span class="number">0x14009b70f</span>,<span class="number">0x1400a6b74</span>,<span class="number">0x140045f2e</span>,<span class="number">0x140037db2</span>,<span class="number">0x140021128</span>,<span class="number">0x1400e549d</span>,<span class="number">0x140088782</span>,<span class="number">0x140069be7</span>,<span class="number">0x140064e90</span>,<span class="number">0x140034e9b</span>,<span class="number">0x140074ce9</span>,<span class="number">0x1400ee88d</span>,<span class="number">0x140017f67</span>,<span class="number">0x14008e5cd</span>,<span class="number">0x140030dea</span>,<span class="number">0x1400adcb7</span>,<span class="number">0x1400857c4</span>,<span class="number">0x1400025b9</span>,<span class="number">0x1400b6283</span>,<span class="number">0x1400ac98b</span>,<span class="number">0x1400d22ff</span>,<span class="number">0x14004e3ca</span>,<span class="number">0x140099671</span>,<span class="number">0x140099677</span>,<span class="number">0x14000391a</span>,<span class="number">0x14007c539</span>,<span class="number">0x1400bb3c7</span>,<span class="number">0x14008f046</span>,<span class="number">0x1400a978f</span>,<span class="number">0x14009b70f</span>,<span class="number">0x1400a6b74</span>,<span class="number">0x140045f2e</span>,<span class="number">0x140037db2</span>,<span class="number">0x140021128</span>,<span class="number">0x1400e549d</span>,<span class="number">0x140088782</span>,<span class="number">0x140069be7</span>,<span class="number">0x1400d8db6</span>,<span class="number">0x14006cd36</span>,<span class="number">0x1400c0765</span>,<span class="number">0x140061681</span>,<span class="number">0x1400a0c6c</span>,<span class="number">0x14003a608</span>,<span class="number">0x14001cae6</span>,<span class="number">0x1400f63e6</span>,<span class="number">0x1400affb6</span>,<span class="number">0x14000d8f7</span>,<span class="number">0x14003f111</span>,<span class="number">0x140046bcf</span>,<span class="number">0x140066b81</span>,<span class="number">0x14006734f</span>,<span class="number">0x140063405</span>,<span class="number">0x14005c245</span>,<span class="number">0x1400a8f62</span>,<span class="number">0x140050474</span>,<span class="number">0x14006b372</span>,<span class="number">0x1400e9fea</span>,<span class="number">0x1400f5667</span>,<span class="number">0x1400ba5aa</span>,<span class="number">0x140021277</span>,<span class="number">0x1400f8634</span>,<span class="number">0x1400bcce5</span>,<span class="number">0x1400386f9</span>,<span class="number">0x1400f5741</span>,<span class="number">0x140040fed</span>,<span class="number">0x1400ae5a0</span>,<span class="number">0x1400de1b6</span>,<span class="number">0x1400127b9</span>,<span class="number">0x1400afa4c</span>,<span class="number">0x14009cbfe</span>,<span class="number">0x14004d06f</span>,<span class="number">0x1400f74bb</span>,<span class="number">0x1400b0bad</span>,<span class="number">0x1400aa0b4</span>,<span class="number">0x1400e86dc</span>,<span class="number">0x14003d6b8</span>,<span class="number">0x1400407ed</span>,<span class="number">0x1400ee996</span>,<span class="number">0x14006b83d</span>,<span class="number">0x1400932f0</span>,<span class="number">0x14001c061</span>,<span class="number">0x140020e62</span>,<span class="number">0x14007c505</span>,<span class="number">0x14004c19b</span>,<span class="number">0x1400403f6</span>,<span class="number">0x14003d086</span>,<span class="number">0x1400609dd</span>,<span class="number">0x1400645e4</span>,<span class="number">0x14002ade3</span>,<span class="number">0x1400201b3</span>,<span class="number">0x1400585f8</span>,<span class="number">0x1400344a2</span>,<span class="number">0x14003746d</span>,<span class="number">0x140093ae9</span>,<span class="number">0x1400f8f00</span>,<span class="number">0x14003cb4b</span>,<span class="number">0x1400a0472</span>,<span class="number">0x14004cc27</span>,<span class="number">0x1400a720f</span>,<span class="number">0x140062b19</span>,<span class="number">0x1400d7e9d</span>,<span class="number">0x140035b53</span>,<span class="number">0x1400489eb</span>,<span class="number">0x1400c93d1</span>,<span class="number">0x140049b13</span>,<span class="number">0x1400b6994</span>,<span class="number">0x1400dc2a0</span>,<span class="number">0x1400b1d93</span>,<span class="number">0x14007a048</span>,<span class="number">0x1400bbdb4</span>,<span class="number">0x140093534</span>,<span class="number">0x1400a939a</span>,<span class="number">0x140065701</span>,<span class="number">0x1400ac86b</span>,<span class="number">0x14003c7f8</span>,<span class="number">0x1400b2b4d</span>,<span class="number">0x1400e5d05</span>,<span class="number">0x1400c9ee6</span>,<span class="number">0x1400961bf</span>,<span class="number">0x1400d1abe</span>,<span class="number">0x1400e6ac8</span>,<span class="number">0x1400c8f1f</span>,<span class="number">0x14005e050</span>,<span class="number">0x140095e85</span>,<span class="number">0x1400610a1</span>,<span class="number">0x14003a0b5</span>,<span class="number">0x1400cda74</span>,<span class="number">0x14009367b</span>,<span class="number">0x1400c26a0</span>,<span class="number">0x1400b3149</span>,<span class="number">0x140024323</span>,<span class="number">0x14000234c</span>,<span class="number">0x1400175a1</span>,<span class="number">0x14001a8f0</span>,<span class="number">0x1400a1493</span>,<span class="number">0x140052dc1</span>,<span class="number">0x1400cfa4f</span>,<span class="number">0x1400c82e5</span>,<span class="number">0x14008e488</span>,<span class="number">0x140026895</span>,<span class="number">0x1400d667c</span>,<span class="number">0x14002cd55</span>,<span class="number">0x1400f5c45</span>,<span class="number">0x14008bf75</span>,<span class="number">0x140010075</span>,<span class="number">0x1400190b3</span>,<span class="number">0x1400de7d0</span>,<span class="number">0x14008d5d4</span>,<span class="number">0x1400e4a0c</span>,<span class="number">0x1400a7382</span>,<span class="number">0x140037876</span>,<span class="number">0x1400d5016</span>,<span class="number">0x1400c7b84</span>,<span class="number">0x14003ad82</span>,<span class="number">0x140065331</span>,<span class="number">0x140013029</span>,<span class="number">0x1400b4f3a</span>,<span class="number">0x14008c9ee</span>,<span class="number">0x1400c376e</span>,<span class="number">0x1400f95db</span>,<span class="number">0x14003eb8e</span>,<span class="number">0x140070774</span>,<span class="number">0x140051198</span>,<span class="number">0x1400bd38a</span>,<span class="number">0x14008c893</span>,<span class="number">0x140041e14</span>,<span class="number">0x140092f4a</span>,<span class="number">0x1400e487b</span>,<span class="number">0x1400f75f6</span>,<span class="number">0x140021d1b</span>,<span class="number">0x140013251</span>,<span class="number">0x14005047c</span>,<span class="number">0x140028abd</span>,<span class="number">0x1400e5392</span>,<span class="number">0x1400a8349</span>,<span class="number">0x14007619b</span>,<span class="number">0x14004cfaf</span>,<span class="number">0x140051b04</span>,<span class="number">0x140020bc7</span>,<span class="number">0x1400122e2</span>,<span class="number">0x140079ad8</span>,<span class="number">0x1400c5aa9</span>,<span class="number">0x14008fdb8</span>,<span class="number">0x1400b6b57</span>,<span class="number">0x1400ef67c</span>,<span class="number">0x14008239c</span>,<span class="number">0x14008f521</span>,<span class="number">0x140084df2</span>,<span class="number">0x1400d203c</span>,<span class="number">0x1400108a1</span>,<span class="number">0x1400e399d</span>,<span class="number">0x140021f1c</span>,<span class="number">0x14001d98f</span>,<span class="number">0x1400d9e3c</span>,<span class="number">0x1400a86dd</span>,<span class="number">0x1400ce809</span>,<span class="number">0x140032394</span>,<span class="number">0x140093660</span>,<span class="number">0x14001f168</span>,<span class="number">0x14009aabc</span>,<span class="number">0x1400ed298</span>,<span class="number">0x1400dc6f5</span>,<span class="number">0x140002691</span>,<span class="number">0x1400b603b</span>,<span class="number">0x14009c76a</span>,<span class="number">0x140053a4f</span>,<span class="number">0x1400411dc</span>,<span class="number">0x1400411e2</span>,<span class="number">0x1400cf6b9</span>,<span class="number">0x140049b81</span>,<span class="number">0x140053fcb</span>,<span class="number">0x1400fa16d</span>,<span class="number">0x14001d49c</span>,<span class="number">0x14002d10f</span>,<span class="number">0x14009644f</span>,<span class="number">0x140068922</span>,<span class="number">0x1400f734a</span>,<span class="number">0x1400195f6</span>,<span class="number">0x1400b932b</span>,<span class="number">0x1400a7f82</span>,<span class="number">0x140020c11</span>,<span class="number">0x1400d1807</span>,<span class="number">0x14006b86f</span>,<span class="number">0x1400a0e4f</span>,<span class="number">0x140033127</span>,<span class="number">0x1400db36d</span>,<span class="number">0x14005cf3b</span>,<span class="number">0x14005d401</span>,<span class="number">0x1400d70e7</span>,<span class="number">0x14006b0e0</span>,<span class="number">0x14009b72b</span>,<span class="number">0x14004f9a3</span>,<span class="number">0x1400cb0a9</span>,<span class="number">0x1400d9db0</span>,<span class="number">0x1400677e0</span>,<span class="number">0x1400113c0</span>,<span class="number">0x1400e0c75</span>,<span class="number">0x140042cfe</span>,<span class="number">0x14000bcd7</span>,<span class="number">0x14009a73b</span>,<span class="number">0x1400b0a29</span>,<span class="number">0x1400a25e7</span>,<span class="number">0x1400de3af</span>,<span class="number">0x140097af0</span>,<span class="number">0x14000b885</span>,<span class="number">0x1400e2a2a</span>,<span class="number">0x1400fa18e</span>,<span class="number">0x1400017a2</span>,<span class="number">0x1400f7e0d</span>,<span class="number">0x1400e08ef</span>,<span class="number">0x14008b954</span>,<span class="number">0x140039307</span>,<span class="number">0x140080b6f</span>,<span class="number">0x140017839</span>,<span class="number">0x140062a08</span>,<span class="number">0x140019442</span>,<span class="number">0x1400b5921</span>,<span class="number">0x140011462</span>,<span class="number">0x1400f9d12</span>,<span class="number">0x1400d91a0</span>,<span class="number">0x140012fa9</span>,<span class="number">0x140067ef0</span>,<span class="number">0x1400b7c3d</span>,<span class="number">0x1400752dd</span>,<span class="number">0x14002715b</span>,<span class="number">0x140010b61</span>,<span class="number">0x1400e9d43</span>,<span class="number">0x1400f0464</span>,<span class="number">0x1400ded5f</span>,<span class="number">0x1400843dd</span>,<span class="number">0x1400843e1</span>,<span class="number">0x14008020d</span>,<span class="number">0x140028484</span>,<span class="number">0x1400f8380</span>,<span class="number">0x140053e38</span>,<span class="number">0x140036180</span>,<span class="number">0x140080d39</span>,<span class="number">0x1400a6c18</span>,<span class="number">0x1400b6324</span>,<span class="number">0x1400de837</span>,<span class="number">0x1400a7352</span>,<span class="number">0x14007cd16</span>,<span class="number">0x1400f0f20</span>,<span class="number">0x14007cfdd</span>,<span class="number">0x14009002f</span>,<span class="number">0x140080a00</span>,<span class="number">0x1400f1551</span>,<span class="number">0x1400255b8</span>,<span class="number">0x1400e31b1</span>,<span class="number">0x1400875e0</span>,<span class="number">0x1400ba9cc</span>,<span class="number">0x1400aca2c</span>,<span class="number">0x1400b8ef7</span>,<span class="number">0x14008a498</span>,<span class="number">0x14004849e</span>,<span class="number">0x1400ec496</span>,<span class="number">0x14007afe0</span>,<span class="number">0x1400920af</span>,<span class="number">0x1400c9bcb</span>,<span class="number">0x1400e18bb</span>,<span class="number">0x1400b873b</span>,<span class="number">0x14000f17c</span>,<span class="number">0x140026de4</span>,<span class="number">0x1400ed51b</span>,<span class="number">0x140002a2b</span>,<span class="number">0x1400866d4</span>,<span class="number">0x140070872</span>,<span class="number">0x14005b83e</span>,<span class="number">0x14009341f</span>,<span class="number">0x1400b74ac</span>,<span class="number">0x14005bf73</span>,<span class="number">0x1400d8fa2</span>,<span class="number">0x140058517</span>,<span class="number">0x14004545f</span>,<span class="number">0x1400b80cb</span>,<span class="number">0x1400b1e14</span>,<span class="number">0x1400cb869</span>,<span class="number">0x1400b78c0</span>,<span class="number">0x1400f5b05</span>,<span class="number">0x140017e14</span>,<span class="number">0x1400a3f95</span>,<span class="number">0x14007816c</span>,<span class="number">0x140031b63</span>,<span class="number">0x14004bd45</span>,<span class="number">0x1400f6131</span>,<span class="number">0x1400b3d6f</span>,<span class="number">0x140055cca</span>,<span class="number">0x140033675</span>,<span class="number">0x14006781a</span>,<span class="number">0x1400528e0</span>,<span class="number">0x14005890e</span>,<span class="number">0x1400b7575</span>,<span class="number">0x14006d905</span>,<span class="number">0x1400add65</span>,<span class="number">0x1400f6918</span>,<span class="number">0x140029440</span>,<span class="number">0x1400201b3</span>,<span class="number">0x1400585f8</span>,<span class="number">0x1400344a2</span>,<span class="number">0x14003746d</span>,<span class="number">0x140093ae9</span>,<span class="number">0x1400f8f00</span>,<span class="number">0x14003cb4b</span>,<span class="number">0x1400a0472</span>,<span class="number">0x14004cc27</span>,<span class="number">0x1400a720f</span>,<span class="number">0x140062b19</span>,<span class="number">0x1400d7e9d</span>,<span class="number">0x140035b53</span>,<span class="number">0x1400489eb</span>,<span class="number">0x1400c93d1</span>,<span class="number">0x140049b13</span>,<span class="number">0x1400b6994</span>,<span class="number">0x1400dc2a0</span>,<span class="number">0x1400b1d93</span>,<span class="number">0x14007a048</span>,<span class="number">0x1400bbdb4</span>,<span class="number">0x140093534</span>,<span class="number">0x1400a939a</span>,<span class="number">0x140065701</span>,<span class="number">0x1400ac86b</span>,<span class="number">0x14003c7f8</span>,<span class="number">0x1400b2b4d</span>,<span class="number">0x1400e5d05</span>,<span class="number">0x1400618cc</span>,<span class="number">0x1400d4c95</span>,<span class="number">0x14008b527</span>,<span class="number">0x140024dd7</span>,<span class="number">0x14002893c</span>,<span class="number">0x1400cee23</span>,<span class="number">0x1400c8251</span>,<span class="number">0x1400bcd83</span>,<span class="number">0x1400d591a</span>,<span class="number">0x140084140</span>,<span class="number">0x140027a64</span>,<span class="number">0x14008c361</span>,<span class="number">0x1400DFC26</span>,<span class="number">0x140084AF9</span>,<span class="number">0x14000E2D5</span>,<span class="number">0x14000EEBD</span>,<span class="number">0x1400889B6</span>,<span class="number">0x14006390E</span>,<span class="number">0x14007C4CD</span>,<span class="number">0x140012781</span>,<span class="number">0x140048357</span>,<span class="number">0x1400596FF</span>,<span class="number">0x14008807F</span>,<span class="number">0x140014acc</span>,<span class="number">0x140022c16</span>,<span class="number">0x1400e6a73</span>,<span class="number">0x140014D26</span>,<span class="number">0x140091363</span>, <span class="number">0x140014acc</span>,<span class="number">0x14006E7A8</span>,<span class="number">0x14004785B</span>,<span class="number">0x1400E2890</span>,<span class="number">0x14008334E</span>,<span class="number">0x140061f8b</span>,<span class="number">0x1400620f3</span>, <span class="number">0x1400d75d7</span>,<span class="number">0x1400d50cf</span>,<span class="number">0x140082b78</span>,<span class="number">0x1400d1579</span>,<span class="number">0x140024af6</span>,<span class="number">0x14006cf3b</span>,<span class="number">0x1400d0f8e</span>, <span class="number">0x14006689C</span>,<span class="number">0x140057B79</span>,<span class="number">0x1400D58AC</span>,<span class="number">0x140001a06</span>,<span class="number">0x1400b5d46</span>,<span class="number">0x1400e1e42</span>,<span class="number">0x1400B9910</span>, <span class="number">0x14002A213</span>,<span class="number">0x1400BC169</span>,<span class="number">0x14003AB45</span>,<span class="number">0x14006D099</span>,<span class="number">0x14006b00b</span>,<span class="number">0x1400c86f1</span>,<span class="number">0x1400f9bfa</span>, <span class="number">0x140021245</span>,<span class="number">0x1400EC7AE</span>,<span class="number">0x1400A5B1A</span>,<span class="number">0x1400C9E5E</span>,<span class="number">0x140039D11</span>]</span><br><span class="line">path = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> nowlist:</span><br><span class="line"><span class="comment">#    print(hex(i))</span></span><br><span class="line">    AutoMark(i,AU_CODE)</span><br><span class="line"><span class="comment">#    fuckret(i)</span></span><br><span class="line">    <span class="keyword">if</span> fuckret(i) &gt; <span class="number">0</span>:</span><br><span class="line">        path.append(i)</span><br></pre></td></tr></table></figure><h4 id="0x02-patch-etc"><a href="#0x02-patch-etc" class="headerlink" title="0x02 patch etc"></a>0x02 patch etc</h4><p>去完以上混淆以后 </p><p>再尝试 trace </p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599600213/0"></p><p>可以利用以下正则表达式去掉 trace 文本中的很多无用信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">^(.*)jmp(.*)\r\n</span><br><span class="line">^(.*)nop(.*)\r\n</span><br><span class="line">^(.*)00007FFF(.*)\r\n</span><br></pre></td></tr></table></figure><p>然后可以发现还剩下一些 pop retn 没有去掉</p><p>没有去掉的原因呢 是因为仍然有变种的 pop retn</p><p>这种变种的 pop retn 中插了有意义的代码 如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">push    rax                     </span><br><span class="line">push    rax                     </span><br><span class="line">pushfq                          </span><br><span class="line">push    rax                     </span><br><span class="line">push    rax                     </span><br><span class="line">pushfq                          </span><br><span class="line">call    $+5                     </span><br><span class="line">pop     rax                     </span><br><span class="line">xor     rax, 6665h              </span><br><span class="line">mov     [rsp+10h], rax   </span><br><span class="line">popfq                           </span><br><span class="line">pop     rax                     </span><br><span class="line">pop     rax                     </span><br><span class="line">add     rax, 36F74h             </span><br><span class="line">mov     [rsp+10h], rax        </span><br><span class="line">popfq                           </span><br><span class="line">pop     rax</span><br><span class="line">moveax, 1###有用的代码</span><br><span class="line">retn  </span><br></pre></td></tr></table></figure><p>这种混淆要识别有用的代码 而且各个有用的代码都不相同 有的甚至是嵌套 pop ret 给识别带来很大的困难</p><p>考虑到此时已经可以大概看的了汇编了 于是就不准备再继续写 patch 了</p><h3 id="0x1-还原"><a href="#0x1-还原" class="headerlink" title="0x1 还原"></a>0x1 还原</h3><p>直接调试被 patch 以后的程序 F9运行到挂起等待输入 点击暂停 随便输入以后会断下来</p><p>按 alt+F9 回到用户代码段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">000000014008C365call r10//scanf</span><br></pre></td></tr></table></figure><p>在system函数下断点 从这里开始 trace</p><h4 id="0x10-检查长度"><a href="#0x10-检查长度" class="headerlink" title="0x10 检查长度"></a>0x10 检查长度</h4><p>把结果中的 nop jmp 系统函数地址的代码 全部替换为空</p><p>尝试搜索一下cmp 发现一个可疑的地方</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599600360/0"></p><p>回到没去掉系统段的函数的时候</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599600445/0"></p><p>再调试确认一下输入 84 长度的假码 rax == 54 很明显这里的逻辑就是</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="built_in">strlen</span>(input) != <span class="number">0x54</span>)</span><br><span class="line">    print(<span class="string">&#x27; &gt;&gt;&gt; 阁下的数学成绩堪忧，请回吧。&#x27;</span>)</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="0x11-输入范围"><a href="#0x11-输入范围" class="headerlink" title="0x11 输入范围"></a>0x11 输入范围</h4><p>继续往下 trace</p><p>trace完用前面的那个找ret的下一行的脚本 再用前面的去混淆 保存 再trace就很干净了</p><p>很容易可以看见一个循环 找到几句关键代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">140027B39   cmp eax,30</span><br><span class="line">1400CBFAD   cmp eax,39 </span><br><span class="line">1400A27A9   cmp eax,41</span><br><span class="line">1400A07D9   cmp eax,5A</span><br><span class="line">1400BE069   cmp qword ptr ss:[rsp+B0],54</span><br><span class="line">140069753   jge patch3.14006976C</span><br></pre></td></tr></table></figure><p>这里很明显就是比较输入范围是 0-9 A-Z</p><h4 id="0x12-转换输入"><a href="#0x12-转换输入" class="headerlink" title="0x12 转换输入"></a>0x12 转换输入</h4><p>再从循环尾往下找</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1400731D7mov byte ptr ss:[rsp+7],cl</span><br><span class="line">1400938D7cmp eax,30</span><br><span class="line">14001A372cmp eax,39</span><br><span class="line">140069CABsub rax,30</span><br><span class="line"></span><br><span class="line">14000224Dcmp eax,41</span><br><span class="line">1400B2DC9cmp eax,5A </span><br><span class="line">14004B966sub rax,41</span><br><span class="line">140094D9Cadd rax,A</span><br><span class="line"></span><br><span class="line">14007F965mov qword ptr ss:[rsp+A8],rax</span><br><span class="line">140054381cmp qword ptr ss:[rsp+A8],2A</span><br><span class="line"></span><br><span class="line">1400BA991imul rax,rax,2A</span><br></pre></td></tr></table></figure><p>观察了一下分支是从这个比较错开的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1400906DBcmp rax,qword ptr ss:[rsp+rcx*8+EC0]</span><br><span class="line">1400A9B93jg patch3.1400A9BAC</span><br></pre></td></tr></table></figure><p>查看了一下寄存器这里比较的是1AF 与25B</p><p>再查询了一下上下文</p><p>我的输入是 ABCDEFABCDEF….</p><p>1AF 是由  0xA*0x2a + 0xB算来的   25B是由0xE * 0x2a + 0xF</p><p>同时这里的循环计次变量为3</p><p>可以推算出 把输入从 str 变成了 hex 之后</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( i != <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span>( input_hex[i]*<span class="number">0x2a</span>+input_hex[i+<span class="number">1</span>] &lt; input_hex[i<span class="number">-2</span>]*<span class="number">0x2a</span>+input_hex[i<span class="number">-1</span>] )</span><br><span class="line">        GG</span><br></pre></td></tr></table></figure><p>当前这一位前一位 * 0x2a + 后一位</p><p>也就是把 hex 的两位看成一位来运算</p><p>此时感觉有点不对 输入10位数字加上26位字母只有36位 而他比较42位感觉还有几位输入</p><p>输入了一些不是上面范围的字符 再跑了一下 发现了剩下的几位</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">140045713   cmp eax,2B +</span><br><span class="line">140071B51   cmp eax,2D -</span><br><span class="line">1400F5DA9   cmp eax,2A *</span><br><span class="line">140014C52   cmp eax,2F /</span><br><span class="line">140081C7A   cmp eax,25 %</span><br><span class="line">140003A93   cmp eax,3D =</span><br></pre></td></tr></table></figure><p>转换之后是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1400F5A62 | 83F8 2B                  | cmp eax,2B</span><br><span class="line">140003A25 | 48:C74424 08 24000000    | mov qword ptr ss:[rsp+8],24</span><br><span class="line"></span><br><span class="line">140096D4F | 83F8 2D                  | cmp eax,2D</span><br><span class="line">1400528A1 | 48:C74424 08 25000000    | mov qword ptr ss:[rsp+8],25</span><br><span class="line"></span><br><span class="line">14001E900 | 83F8 2A                  | cmp eax,2A</span><br><span class="line">14005337E | 48:C74424 08 26000000    | mov qword ptr ss:[rsp+8],26</span><br><span class="line"></span><br><span class="line">1400F3D8E | 83F8 2F                  | cmp eax,2F</span><br><span class="line">14000C5FA | 48:C74424 08 27000000    | mov qword ptr ss:[rsp+8],27</span><br><span class="line"></span><br><span class="line">140064EDF | 83F8 25                  | cmp eax,25</span><br><span class="line">1400AEF1C | 48:C74424 08 28000000    | mov qword ptr ss:[rsp+8],28</span><br><span class="line"></span><br><span class="line">1400C9DE1 | 83F8 3D                  | cmp eax,3D</span><br><span class="line">14007B859 | 48:C74424 08 29000000    | mov qword ptr ss:[rsp+8],29</span><br></pre></td></tr></table></figure><p>很好现在已经把输入范围和输入转换搞定了 继续往下看</p><h4 id="0x13-重复检查"><a href="#0x13-重复检查" class="headerlink" title="0x13 重复检查"></a>0x13 重复检查</h4><p>再往下发现还是走不下去</p><p>在走不下去的附近有如下逻辑</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">14007D9D5mov qword ptr ss:[rsp+A0],0</span><br><span class="line">140002310cmp qword ptr ss:[rsp+A0],2A</span><br><span class="line">140001F98mov rax,qword ptr ss:[rsp+A0]</span><br><span class="line"></span><br><span class="line">14002D5ACmov rax,qword ptr ss:[rsp+rax*8+EC0]</span><br><span class="line">140073E00mov ecx,2A</span><br><span class="line">14009EA4Fidiv rcx</span><br><span class="line">14006EC35mov qword ptr ss:[rsp+98],rdx//[rsp+98]=change[i]%0x2A</span><br><span class="line">140060863mov rdx,qword ptr ss:[rsp+A0]</span><br><span class="line">140063300mov rdx,qword ptr ss:[rsp+rdx*8+EC0]</span><br><span class="line">140017083mov rax,rdx</span><br><span class="line">1400BCF6Cidiv rcx </span><br><span class="line">1400BF3EFmov qword ptr ss:[rsp+90],rax//[rsp+90]=change[i]/0x2A</span><br><span class="line"></span><br><span class="line">1400BF3EFmov rax,qword ptr ss:[rsp+98]</span><br><span class="line">14004B8F8test byte ptr ss:[rsp+rax+E90],1</span><br><span class="line">14005224Cmov rax,qword ptr ss:[rsp+90]</span><br><span class="line">140015F89test byte ptr ss:[rsp+rax+E60],1</span><br><span class="line"></span><br><span class="line">140027ACEmov rax,qword ptr ss:[rsp+98]</span><br><span class="line">1400E4C50mov byte ptr ss:[rsp+rax+E90],1</span><br><span class="line">1400AC622mov rax,qword ptr ss:[rsp+90]</span><br><span class="line">1400B5248mov byte ptr ss:[rsp+rax+E60],1</span><br><span class="line">140037CD0mov rax,qword ptr ss:[rsp+A0]</span><br><span class="line">140026ABBadd rax,1</span><br><span class="line">1400258E6mov qword ptr ss:[rsp+A0],rax</span><br></pre></td></tr></table></figure><p>这里得取余和除法其实是把 hex形式 再重新提取出来了</p><p>然后以其作为数组下标,去一个表中判断</p><p>如果没有被填过 那就填入并继续循环</p><p>如果已经被填过 那就GG</p><p>用代码来说的话就是</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">table1[<span class="number">0x2a</span>]=&#123;&#125;</span><br><span class="line">table2[<span class="number">0x2a</span>]=&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(input_hex),<span class="number">2</span>):</span><br><span class="line"><span class="keyword">if</span> table1[input_hex[i]] == <span class="number">0</span> <span class="keyword">and</span> table2[input_hex[i+<span class="number">1</span>]] == <span class="number">0</span>:</span><br><span class="line">table1[input_hex[i]] = <span class="number">1</span></span><br><span class="line">table2[input_hex[i+<span class="number">1</span>]] = <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">GG</span><br></pre></td></tr></table></figure><p>用人话来理解就是 奇数位 和 偶数位 的输入序列 每一个输入只允许出现一次</p><p>结合此两位大于前两位的规则</p><p>可以知道奇数位已经是确定为</p><p>0123456….+-*/%=</p><h4 id="0x14-落子检查"><a href="#0x14-落子检查" class="headerlink" title="0x14 落子检查"></a>0x14 落子检查</h4><p>输入满足当前条件的输入再继续往下 trace</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">1400C86F5   mov qword ptr ss:[rsp+88],0             </span><br><span class="line">1400D320E   cmp qword ptr ss:[rsp+88],2A            //循环1</span><br><span class="line">140056B2F   jge patch3.140056B48                    //[rsp+88] = i</span><br><span class="line"></span><br><span class="line">1400CBE10   mov rax,qword ptr ss:[rsp+88]           </span><br><span class="line">140052E9D   add rax,1                               </span><br><span class="line">140078F7F   mov qword ptr ss:[rsp+80],rax           //[rsp+80] = j = i + 1</span><br><span class="line">1400286DB   cmp qword ptr ss:[rsp+80],2A            //循环2</span><br><span class="line">14000D91A   jge patch3.14000D933                    </span><br><span class="line">//change == rsp+EC0</span><br><span class="line">1400F755C   mov rax,qword ptr ss:[rsp+88]           </span><br><span class="line">140098656   mov rax,qword ptr ss:[rsp+rax*8+EC0]    </span><br><span class="line">140001584   cqo                                     </span><br><span class="line">1400A4ADC   mov ecx,2A                              </span><br><span class="line">14001F9E4   idiv rcx                                </span><br><span class="line">14009D9EA   mov r8,qword ptr ss:[rsp+80]            </span><br><span class="line">1400EDA1E   mov r8,qword ptr ss:[rsp+r8*8+EC0]      </span><br><span class="line">14000EA19   mov rax,r8                              </span><br><span class="line">1400A04C3   mov qword ptr ss:[rsp+38],rdx       //[rsp+38] = change[i] % 0x2a</span><br><span class="line">140037898   cqo                                     </span><br><span class="line">14008A550   idiv rcx                                </span><br><span class="line">1400399F2   mov r8,qword ptr ss:[rsp+38]            </span><br><span class="line">1400D4106   sub r8,rdx                              //[rsp+78] = [rsp+38] - change[j] % 0x2a</span><br><span class="line">1400901F7   mov qword ptr ss:[rsp+78],r8            </span><br><span class="line">14009DAAD   mov rdx,qword ptr ss:[rsp+88]           </span><br><span class="line">14000E4E3   mov rdx,qword ptr ss:[rsp+rdx*8+EC0]    </span><br><span class="line">1400EE409   mov rax,rdx                             </span><br><span class="line">1400C5EE9   cqo                                     </span><br><span class="line">140020832   idiv rcx                                </span><br><span class="line">14008C074   mov r8,qword ptr ss:[rsp+80]            </span><br><span class="line">14006079F   mov r8,qword ptr ss:[rsp+r8*8+EC0]      </span><br><span class="line">140013395   mov qword ptr ss:[rsp+30],rax           //[rsp+30] = change[j] / 0x2a</span><br><span class="line">1400C5CE1   mov rax,r8                              </span><br><span class="line">14002FFF8   cqo                                     </span><br><span class="line">14007539E   idiv rcx                                </span><br><span class="line">14006BF8A   mov rcx,qword ptr ss:[rsp+30]           </span><br><span class="line">1400DB4A6   sub rcx,rax                             </span><br><span class="line">1400E127D   mov qword ptr ss:[rsp+70],rcx           //[rsp+70] = [rsp+30] - change[i] / 0x2a</span><br><span class="line">140073B88   cmp qword ptr ss:[rsp+78],0</span><br><span class="line">14006437Ejge patch3.140064397//若满足条件跳转 下面这一段不执行</span><br><span class="line"></span><br><span class="line">1400BFF7E   xor eax,eax                      </span><br><span class="line">1400EACB4   mov ecx,eax                      </span><br><span class="line">140080A4A   mov rdx,rcx                      </span><br><span class="line">1400A7967   sub rdx,qword ptr ss:[rsp+78]    </span><br><span class="line">1400517AC   mov qword ptr ss:[rsp+78],rdx    //[rsp+78] = -[rsp+78]</span><br><span class="line">14000B3C6   sub rcx,qword ptr ss:[rsp+70]    </span><br><span class="line">14008DA3A   mov qword ptr ss:[rsp+70],rcx    //[rsp+70] = -[rsp+70]</span><br><span class="line"></span><br><span class="line">1400B368C   mov rax,qword ptr ss:[rsp+70]    </span><br><span class="line">140079E70   add rax,29                       </span><br><span class="line">1400DE855   mov qword ptr ss:[rsp+70],rax    //[rsp+70] += 0x29</span><br><span class="line">14007C0C8   imul rax,qword ptr ss:[rsp+70],2A</span><br><span class="line">1400DC9B8   lea rcx,qword ptr ss:[rsp+C0]    //[rsp+C0] == table</span><br><span class="line">140038FE8   add rcx,rax                      </span><br><span class="line">140067202   mov rax,qword ptr ss:[rsp+78]    </span><br><span class="line">14008B8FD   test byte ptr ds:[rcx+rax],1     //table[[rsp+70] * 0x2a + [rsp+78]] == 1  -&gt; gg</span><br><span class="line">140063B11   je patch3.140063B2A              </span><br></pre></td></tr></table></figure><p>转成伪代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ih = input_hex</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">42</span>*<span class="number">2</span>,<span class="number">2</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i+<span class="number">2</span>,<span class="number">42</span>*<span class="number">2</span>,<span class="number">2</span>):</span><br><span class="line">        v70 = ih[j] - ih[i]</span><br><span class="line">        v78 = ih[j+<span class="number">1</span>] - ih[i+<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> v78 &lt; <span class="number">0</span> :</span><br><span class="line">            v78 = -v78</span><br><span class="line">            v70 = -v70</span><br><span class="line">        index = (v70 + <span class="number">41</span>) * <span class="number">42</span> + v78 </span><br><span class="line"><span class="keyword">if</span> table[index] != <span class="number">0</span>:</span><br><span class="line">table[index] = <span class="number">0</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            GG</span><br></pre></td></tr></table></figure><p>结合题目描述 这应该是模拟了一个棋盘 而 input_hex 每两位是一个 point(x,y)</p><p>棋盘大小是 42*42 也就是题目所提示的 36*49</p><p>而落子方式并非简单的 x,y 代入 而是以任意两点为基础</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Y = (y&#x27; - y &lt; 0) ?  flag = 1, y - y&#x27; : y&#x27; - y</span><br><span class="line">X = (flag == 1 ? x - x&#x27; : x&#x27; - x) + 41</span><br></pre></td></tr></table></figure><p>按此方式落子 若不重复 且全部子落完即可满足条件</p><p>考虑到用爆破来解这个题复杂度一定很高 而且也有可能有多解</p><p>猜测后面还有限制条件没找到</p><h4 id="0x15-多解检查"><a href="#0x15-多解检查" class="headerlink" title="0x15 多解检查"></a>0x15 多解检查</h4><p>再在外层循环判断尾的时候直接跳过 trace 赫然就发现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">140039540lea rcx,qword ptr ss:[rsp+1010] </span><br><span class="line">1400CE591lea rdx,qword ptr ds:[140004521]</span><br><span class="line">//140004521&quot;02152S3X4Z5Q6C7T819/ADB%C*DL&quot;</span><br><span class="line">14004CACFmov r8d,1C                      </span><br><span class="line">14004FED9call qword ptr ds:[&lt;&amp;strncmp&gt;]  </span><br><span class="line"></span><br><span class="line">140021803cmp rcx,0</span><br></pre></td></tr></table></figure><p>把比较结果再改掉 发现直接提示成功了</p><p>说明到这里程序的所有逻辑就已经完全 dump 完了</p><p>接下来就是如何解的问题了</p><h3 id="0x2-解局"><a href="#0x2-解局" class="headerlink" title="0x2 解局"></a>0x2 解局</h3><p>利用以上已知条件直接模拟爆破即可</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> table[] = <span class="string">&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ+-*/%=&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> flag[<span class="number">100</span>] = <span class="string">&quot;02152S3X4Z5Q6C7T819/ADB%C*DL&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">finx</span><span class="params">(<span class="keyword">char</span> tofind)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (tofind == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; table[i]; ++i)</span><br><span class="line">        <span class="keyword">if</span> (table[i] == tofind)</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">toc</span><span class="params">(<span class="keyword">int</span> ind)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> table[ind];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">char</span> index, <span class="keyword">char</span> fill)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; index; ++i)</span><br><span class="line">        <span class="keyword">if</span> (flag[i * <span class="number">2</span> + <span class="number">1</span>] == fill)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//false if again</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> ctable[<span class="number">5000</span>] = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; index * <span class="number">2</span>; i += <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x = flag[i],</span><br><span class="line">            y = flag[i + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">2</span>; j &lt; index * <span class="number">2</span>; j += <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> x_ = flag[j],</span><br><span class="line">                y_ = flag[j + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> tmp = y_ - y,</span><br><span class="line">                tmp2 = x_ - x;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (tmp &lt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                tmp = -tmp;</span><br><span class="line">                tmp2 = -tmp2;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> indx = (tmp2 + <span class="number">41</span>) * <span class="number">42</span> + tmp;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (ctable[indx] == <span class="number">0</span>)</span><br><span class="line">                ctable[indx] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="comment">//check down</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">slove</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> index;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">42</span>; ++i)</span><br><span class="line">        <span class="keyword">if</span> (!flag[i * <span class="number">2</span> + <span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            index = i * <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">42</span> * <span class="number">2</span>; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (flag[i] != <span class="number">0</span>)</span><br><span class="line">            flag[i] = finx(flag[i]);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            flag[i] = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = index / <span class="number">2</span>; j &lt; <span class="number">42</span>; ++j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> fflag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> st = flag[index];</span><br><span class="line">        <span class="keyword">if</span> (st != <span class="number">-1</span>)<span class="comment">//pass the wrong way</span></span><br><span class="line">            st += <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            st = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt; <span class="number">42</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (check(index / <span class="number">2</span>, i))</span><br><span class="line">            &#123;</span><br><span class="line">                fflag = <span class="number">1</span>;</span><br><span class="line">                flag[index] = i;</span><br><span class="line">                index += <span class="number">2</span>;</span><br><span class="line">                flag[index] = <span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!fflag)<span class="comment">//in this index all is cant check,so ret after</span></span><br><span class="line">        &#123;</span><br><span class="line">            j -= <span class="number">2</span>;</span><br><span class="line">            index -= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">42</span> * <span class="number">2</span>; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        flag[i] = toc(flag[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">42</span>; ++i)</span><br><span class="line">        flag[i * <span class="number">2</span>] = toc(i);</span><br><span class="line">    slove();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, flag);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大概20分钟可以爆破出来 懒得优化了 可以了</p><h2 id="第七题-千里寻跟"><a href="#第七题-千里寻跟" class="headerlink" title="第七题 千里寻跟"></a>第七题 千里寻跟</h2><h2 id="第八题-众叛亲离"><a href="#第八题-众叛亲离" class="headerlink" title="第八题 众叛亲离"></a>第八题 众叛亲离</h2><blockquote><p>非预期解,利用了作者留下的漏洞(作者可能没想到?</p></blockquote><h3 id="入局"><a href="#入局" class="headerlink" title="入局"></a>入局</h3><p>这题 IDA 直接 F5 不了,说 too big funtion</p><p>百度解决了以后 经过漫长的反编译</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599600536/0"></p><p>终于反编译出了看不懂的15000余行代码!!</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599600663/0"></p><p>通过字符串勉强找到了输入的地方</p><p>但是后面完全看不太懂的样子</p><p>看了graph 果然和题目名字非常的贴合</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599600712/0"></p><p>好了 可以丢进回收站了</p><h3 id="发展"><a href="#发展" class="headerlink" title="发展"></a>发展</h3><p>过了不久看见群里居然有人拿了一血了！！！</p><p>既然能在这么短时间内做出来,说明肯定不是常规解流程的,也就是说程序留有漏洞！</p><p>把题目从回收站里拿出来</p><p>通过字符串找到有可能是判断的地方</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599600787/0"></p><p>拿真码断一下 可以分析出</p><p>当ecx指向的位置为</p><p>00 00 00 01 00 02 00 03 …. 00 07</p><p>验证成功</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599600871/0"></p><p>尝试随便改动一位serial</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599600952/0"></p><p>更改了倒数第三位 可以看到 比较的序列只有1位改动了！！！</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599600997/0"></p><p>更改了倒数第四位 比较的序列号还是只有一位改动了！！！</p><p>即可且仔细观察可以发现 这里像是一个映射表的关系</p><p>serial的每一位对应着比较的半个比特</p><p>带着这个猜测 再多比较了几次 发现确实是这样</p><h3 id="破局"><a href="#破局" class="headerlink" title="破局"></a>破局</h3><p>那不就好办了</p><p>只要name输入为KCTF</p><p>然后dump出000000….    11111….  fffff….的比较序列</p><p>再把要求的00 00 00 01 00 02 00 03 …. 00 07所对应的找到组合起来</p><p>就可以得到正确的serial</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">00000000000000000000000000000000</span><br><span class="line">85A4A5E55B399224E3F9715B80BA999C</span><br><span class="line"></span><br><span class="line">11111111111111111111111111111111</span><br><span class="line">94B5B4F44A288335F2E8604A91AB888D</span><br><span class="line"></span><br><span class="line">22222222222222222222222222222222</span><br><span class="line">A78687C7791BB006C1DB5379A298BBBE</span><br><span class="line"></span><br><span class="line">33333333333333333333333333333333</span><br><span class="line">B69796D6680AA117D0CA4268B389AAAF</span><br><span class="line"></span><br><span class="line">44444444444444444444444444444444</span><br><span class="line">C1E0E1A11F7DD660A7BD351FC4FEDDD8</span><br><span class="line"></span><br><span class="line">55555555555555555555555555555555</span><br><span class="line">D0F1F0B00E6CC771B6AC240ED5EFCCC9</span><br><span class="line"></span><br><span class="line">66666666666666666666666666666666</span><br><span class="line">E3C2C3833D5FF442859F173DE6DCFFFA</span><br><span class="line"></span><br><span class="line">77777777777777777777777777777777</span><br><span class="line">F2D3D2922C4EE553948E062CF7CDEEEB</span><br><span class="line"></span><br><span class="line">88888888888888888888888888888888</span><br><span class="line">0D2C2D6DD3B11AAC6B71F9D308321114</span><br><span class="line"></span><br><span class="line">99999999999999999999999999999999</span><br><span class="line">1C3D3C7CC2A00BBD7A60E8C219230005</span><br><span class="line"></span><br><span class="line">AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br><span class="line">2F0E0F4FF193388E4953DBF12A103336</span><br><span class="line"></span><br><span class="line">BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB</span><br><span class="line">3E1F1E5EE082299F5842CAE03B012227</span><br><span class="line"></span><br><span class="line">CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC</span><br><span class="line">4968692997F55EE82F35BD974C765550</span><br><span class="line"></span><br><span class="line">DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD</span><br><span class="line">5879783886E44FF93E24AC865D674441</span><br><span class="line"></span><br><span class="line">EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE</span><br><span class="line">6B4A4B0BB5D77CCA0D179FB56E547772</span><br><span class="line"></span><br><span class="line">FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF</span><br><span class="line">7A5B5A1AA4C66DDB1C068EA47F456663</span><br></pre></td></tr></table></figure><blockquote><p>00000001000200030004000500060007<br>85A4A5E45B3B9227E3FD715E80BC999B</p></blockquote><p>验证正确！！！</p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13599601072/0"></p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>这个题居然就这样做出来了,如果是作者是没想到这一点的话,那可真是太可惜了,感觉这题应该是一个非常有难度的题目的.</p><h2 id="第九题-平定战乱"><a href="#第九题-平定战乱" class="headerlink" title="第九题 平定战乱"></a>第九题 平定战乱</h2><p>这是一道 pwn 题</p><h2 id="第十题-一统江湖"><a href="#第十题-一统江湖" class="headerlink" title="第十题 一统江湖"></a>第十题 一统江湖</h2><p>分离大函数并反编译到文件的 python 代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search</span>(<span class="params">address,table</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(table)):</span><br><span class="line">        <span class="keyword">if</span> table[i] != <span class="string">&#x27;?&#x27;</span>:</span><br><span class="line">            <span class="keyword">if</span> ida_bytes.get_byte( address+ i) == table[i]:</span><br><span class="line">                <span class="keyword">if</span> i == <span class="built_in">len</span>(table) - <span class="number">1</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">makenode</span>():</span></span><br><span class="line">    st = <span class="number">0x401610</span></span><br><span class="line">    end = <span class="number">0x6cbf52</span></span><br><span class="line">    table = [<span class="number">3</span>,<span class="string">&#x27;?&#x27;</span>,<span class="number">8</span>,<span class="number">0x8A</span>,<span class="string">&#x27;?&#x27;</span>,<span class="number">0xFF</span>,<span class="number">0x88</span>]</span><br><span class="line">    count = <span class="number">1</span></span><br><span class="line">    node = [<span class="string">&#x27;node_0 : 0x401610, &#x27;</span>]</span><br><span class="line">    <span class="keyword">while</span> st &lt; end:</span><br><span class="line">        <span class="keyword">if</span> search( st, table) == <span class="number">1</span>:</span><br><span class="line">            funend = <span class="built_in">str</span>(<span class="built_in">hex</span>(st + <span class="number">8</span>))</span><br><span class="line">            node[-<span class="number">1</span>] += funend</span><br><span class="line">            node.append(<span class="string">&#x27;node_&#x27;</span> + <span class="built_in">str</span>(count) + <span class="string">&#x27; : &#x27;</span> + funend + <span class="string">&#x27;, &#x27;</span>)</span><br><span class="line">            count += <span class="number">1</span></span><br><span class="line">        st += <span class="number">1</span></span><br><span class="line">    node.pop()</span><br><span class="line">    <span class="keyword">return</span> node</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">makefun</span>():</span></span><br><span class="line">    del_func(<span class="number">0x401610</span>)</span><br><span class="line">    nodes = makenode()</span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&#x27;decompile.txt&#x27;</span>,<span class="string">&#x27;a+&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> node <span class="keyword">in</span> nodes:</span><br><span class="line">        tmp = node.split(<span class="string">&#x27; : &#x27;</span>)<span class="comment">#[&#x27;node_0&#x27;, &#x27;0x401610, 0x405b92&#x27;]</span></span><br><span class="line">        name = tmp[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">        tmp2 = tmp[<span class="number">1</span>].split(<span class="string">&#x27;, &#x27;</span>)</span><br><span class="line">        st  = <span class="built_in">int</span>(tmp2[<span class="number">0</span>],<span class="number">16</span>)</span><br><span class="line">        end = <span class="built_in">int</span>(tmp2[<span class="number">1</span>],<span class="number">16</span>)</span><br><span class="line">        <span class="keyword">if</span> name == <span class="string">&#x27;node_127&#x27;</span>:</span><br><span class="line">            end += <span class="number">4</span></span><br><span class="line">        idc.set_name(st, name)</span><br><span class="line">        add_func(st,end)</span><br><span class="line">        set_frame_size(st,<span class="number">0x3C9F0</span>,<span class="number">4</span>,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        set_func_attr(st, <span class="number">8</span>, <span class="number">0x1410</span>)<span class="comment">#bp based frame</span></span><br><span class="line">        f.write(<span class="built_in">str</span>(idaapi.decompile(st)))</span><br><span class="line">        <span class="comment">#print(&#x27;set func &#x27; + name + &#x27; at [ &#x27; + str(hex(st)) + &#x27;, &#x27; + str(hex(end)) + &#x27;]&#x27;)</span></span><br><span class="line">        <span class="comment">#get_func_attr(st,16)</span></span><br><span class="line">        <span class="comment">#0:start 4:end 8:flags 36:颜色</span></span><br><span class="line">    f.close()</span><br><span class="line"></span><br><span class="line">makefun()</span><br></pre></td></tr></table></figure><p>将反编译整合成128个式子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os, time, sys, re</span><br><span class="line"><span class="comment">#cd desktop &amp;&amp;python3 test.py</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">FAR</span>(<span class="params">string,fed</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        ind = string.find(fed)</span><br><span class="line">        <span class="keyword">if</span> ind == -<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        rightcount = <span class="number">0</span></span><br><span class="line">        leftcount  = <span class="number">0</span></span><br><span class="line">        index = ind</span><br><span class="line">        flag = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> string[ind+<span class="number">2</span>] != <span class="string">&#x27;(&#x27;</span>:</span><br><span class="line">            <span class="keyword">if</span> fed == <span class="string">&#x27;&lt;&#x27;</span>:</span><br><span class="line">                right = string[ind:].find(<span class="string">&#x27;]&#x27;</span>) + ind</span><br><span class="line">                flag = <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span>  string[ind+<span class="number">3</span>] != <span class="string">&#x27;(&#x27;</span>:</span><br><span class="line">            <span class="keyword">if</span> fed == <span class="string">&#x27;&gt;=&#x27;</span>:</span><br><span class="line">                right = string[ind:].find(<span class="string">&#x27;]&#x27;</span>) + ind</span><br><span class="line">                flag = <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> flag == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> string[ind:]:</span><br><span class="line">                <span class="keyword">if</span> i == <span class="string">&#x27;(&#x27;</span>:</span><br><span class="line">                    leftcount += <span class="number">1</span></span><br><span class="line">                <span class="keyword">elif</span> i == <span class="string">&#x27;)&#x27;</span>:</span><br><span class="line">                    rightcount +=<span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> leftcount != <span class="number">0</span> <span class="keyword">and</span> rightcount != <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">if</span> leftcount == rightcount:</span><br><span class="line">                        right = index</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                index += <span class="number">1</span></span><br><span class="line">        rightcount = <span class="number">0</span></span><br><span class="line">        leftcount  = <span class="number">0</span></span><br><span class="line">        index = ind</span><br><span class="line">        <span class="keyword">if</span> string[ind-<span class="number">2</span>] != <span class="string">&#x27;)&#x27;</span>:</span><br><span class="line">            left = string[:ind].rfind(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> string[ind::-<span class="number">1</span>]:</span><br><span class="line">                <span class="keyword">if</span> i == <span class="string">&#x27;(&#x27;</span>:</span><br><span class="line">                    leftcount  += <span class="number">1</span></span><br><span class="line">                <span class="keyword">elif</span> i == <span class="string">&#x27;)&#x27;</span>:</span><br><span class="line">                    rightcount += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> leftcount != <span class="number">0</span> <span class="keyword">and</span> rightcount != <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">if</span> leftcount == rightcount:</span><br><span class="line">                        left = index</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                index -= <span class="number">1</span></span><br><span class="line">        <span class="comment">#(a ^ 1) &amp; (b &amp; 1)    &lt;</span></span><br><span class="line">        <span class="comment">#~((a ^ 1) &amp; (b &amp; 1)) &gt;=</span></span><br><span class="line">        <span class="keyword">if</span> fed == <span class="string">&#x27;&lt;&#x27;</span>:</span><br><span class="line">            a=string[left:ind-<span class="number">1</span>]</span><br><span class="line">            b=string[ind+<span class="number">2</span>:right+<span class="number">1</span>]</span><br><span class="line">            <span class="comment">#print(a+&quot; &lt; &quot;+b)</span></span><br><span class="line">            <span class="comment">#print(&quot;(&quot; + a + &quot; ^ 1) &amp; (&quot; + b + &quot; &amp; 1)&quot;)</span></span><br><span class="line">            <span class="comment">#os.system(&#x27;pause&#x27;)</span></span><br><span class="line">            string = string.replace(a+<span class="string">&quot; &lt; &quot;</span>+b, <span class="string">&quot;(&quot;</span> + a + <span class="string">&quot;^1)&amp;(&quot;</span> + b + <span class="string">&quot;&amp;1)&quot;</span>)</span><br><span class="line">        <span class="keyword">elif</span> fed == <span class="string">&#x27;&gt;=&#x27;</span>:</span><br><span class="line">            a=string[left:ind-<span class="number">1</span>]</span><br><span class="line">            b=string[ind+<span class="number">3</span>:right+<span class="number">1</span>]</span><br><span class="line">            <span class="comment">#print(a+&quot; &gt;= &quot;+b)</span></span><br><span class="line">            <span class="comment">#print(&quot;((~((&quot; + a + &quot;^1)&amp;(&quot; + b + &quot;&amp;1)))&amp;1)&quot;)</span></span><br><span class="line">            <span class="comment">#os.system(&#x27;pause&#x27;)</span></span><br><span class="line">            string = string.replace(a+<span class="string">&quot; &gt;= &quot;</span>+b, <span class="string">&quot;((~((&quot;</span> + a + <span class="string">&quot;^1)&amp;(&quot;</span> + b + <span class="string">&quot;&amp;1)))&amp;1)&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> string</span><br><span class="line"></span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&quot;./kctf10/decompile.txt&quot;</span>,encoding=<span class="string">&quot;utf8&quot;</span>)</span><br><span class="line">key = <span class="string">&quot;a1&quot;</span></span><br><span class="line">sb = <span class="string">&#x27;&#x27;</span></span><br><span class="line">line_num = <span class="number">0</span></span><br><span class="line">maxline = <span class="number">0</span></span><br><span class="line">line = file.readlines()</span><br><span class="line">sbb = []</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    line_num += <span class="number">1</span></span><br><span class="line">    maxline = <span class="built_in">max</span>(maxline,line_num)</span><br><span class="line">    <span class="keyword">if</span> line_num &lt;= <span class="built_in">len</span>(line):</span><br><span class="line">        <span class="keyword">if</span> key <span class="keyword">in</span> line[line_num]:</span><br><span class="line">            <span class="keyword">while</span> <span class="string">&#x27;v3&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> line[line_num]:</span><br><span class="line">                sb += line[line_num].split(<span class="string">&#x27; = &#x27;</span>)[<span class="number">1</span>][:-<span class="number">5</span>] + <span class="string">&#x27;(&#x27;</span></span><br><span class="line">                line_num -= <span class="number">1</span></span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            sb += line[line_num].split(<span class="string">&#x27; = &#x27;</span>)[<span class="number">1</span>][:-<span class="number">5</span>] + <span class="string">&#x27;(&#x27;</span></span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            line_num -= <span class="number">1</span></span><br><span class="line">            sb += line[line_num].split(<span class="string">&#x27; = &#x27;</span>)[<span class="number">1</span>][:-<span class="number">2</span>]</span><br><span class="line">            <span class="keyword">while</span> i != <span class="number">0</span>:</span><br><span class="line">                sb += <span class="string">&#x27;)&#x27;</span></span><br><span class="line">                i -= <span class="number">1</span></span><br><span class="line">            maxline += <span class="number">1</span></span><br><span class="line">            line_num = maxline</span><br><span class="line">            sb+=<span class="string">&#x27;\n&#x27;</span></span><br><span class="line">            sbb.append(sb)</span><br><span class="line">            sb = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">file.close()</span><br><span class="line"><span class="comment">#for i in range(len(sbb)):</span></span><br><span class="line"><span class="comment">#    print(&#x27;printf(&quot;%%s&quot;,inn[%d]==(&#x27;%i + sbb[i][:-1] + &#x27;)?&quot;set\\n&quot;:&quot;unset\\n&quot;);&#x27;)</span></span><br><span class="line"><span class="comment">#i = 2</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(sbb)):</span><br><span class="line"><span class="comment">#if True:</span></span><br><span class="line">    end = FAR(sbb[i],<span class="string">&#x27;&lt;&#x27;</span>)</span><br><span class="line">    end = FAR(end,<span class="string">&#x27;&gt;=&#x27;</span>)</span><br><span class="line">    <span class="comment">#print(end)</span></span><br><span class="line">    <span class="comment">#print(&#x27;printf(&quot;%%s&quot;,inn[%d]==(&#x27;%i + end[:-1] + &#x27;)?&quot;set\\n&quot;:&quot;unset\\n&quot;);&#x27;)</span></span><br><span class="line">    end = (<span class="string">&#x27;    s.add(inn[%d] == (&#x27;</span>%i) + end[:-<span class="number">1</span>] + <span class="string">&#x27;))&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(end)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;escape&gt;拿了件T恤 针不戳</summary>
    
    
    
    <category term="competition" scheme="http://example.com/categories/competition/"/>
    
    
    <category term="ctf" scheme="http://example.com/tags/ctf/"/>
    
    <category term="reverse" scheme="http://example.com/tags/reverse/"/>
    
  </entry>
  
</feed>
