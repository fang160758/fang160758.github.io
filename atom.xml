<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>fangのBlog</title>
  
  <subtitle>倔强</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-06-04T13:23:20.406Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>fang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>个人简历</title>
    <link href="http://example.com/2021/06/04/%E4%B8%AA%E4%BA%BA%E7%AE%80%E5%8E%86/"/>
    <id>http://example.com/2021/06/04/%E4%B8%AA%E4%BA%BA%E7%AE%80%E5%8E%86/</id>
    <published>2021-06-04T13:10:35.263Z</published>
    <updated>2021-06-04T13:23:20.406Z</updated>
    
    <content type="html"><![CDATA[<h3 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h3><p>姓名：李放</p><p>性别：男</p><p>出生日期：2000年10月15日</p><p>籍贯：湖南省冷水江市山尖镇</p><p>学历：本科</p><p>专业：计算机科学与技术</p><p>就读学习：湖南工业大学</p><p>手机号码：19892352035</p><p>个人邮箱：<a href="mailto:&#x32;&#49;&#x39;&#x32;&#50;&#x39;&#52;&#57;&#x33;&#x38;&#64;&#x71;&#113;&#x2e;&#99;&#x6f;&#109;">&#x32;&#49;&#x39;&#x32;&#50;&#x39;&#52;&#57;&#x33;&#x38;&#64;&#x71;&#113;&#x2e;&#99;&#x6f;&#109;</a></p><h3 id="学习方向"><a href="#学习方向" class="headerlink" title="学习方向"></a>学习方向</h3><p>安卓逆向(主要)、PC逆向</p><h3 id="学习经历"><a href="#学习经历" class="headerlink" title="学习经历"></a>学习经历</h3><p>​    在大一下学期开始接触逆向，从PC端逆向开始入门，后来逐渐倾向于Android端逆向。平时学习主要以刷题、打比赛、复现比赛为主。都是通过一些书籍和网上资料摸索着学习。</p><h3 id="我的擅长"><a href="#我的擅长" class="headerlink" title="我的擅长"></a>我的擅长</h3><ul><li>  熟悉C\C++、python、java等语言</li><li>  熟练使用IDA、JEB、JADX、dnSpy、DDMS等逆向工具</li><li>  熟练使用frida框架</li><li>  了解aes、tea、rc4、base64、sha等常用加密算法原理</li><li>  对壳有一定研究，了解一、二代壳的工作原理</li></ul><h3 id="自我评价"><a href="#自我评价" class="headerlink" title="自我评价"></a>自我评价</h3><p>从开始接触逆向至今，已有差不多一年，但总是感觉刚刚入门，自身实力不够，同时学习基本自己摸索，学习深度有限，因此想通过这个实习机会来锻炼一下自己。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;个人信息&quot;&gt;&lt;a href=&quot;#个人信息&quot; class=&quot;headerlink&quot; title=&quot;个人信息&quot;&gt;&lt;/a&gt;个人信息&lt;/h3&gt;&lt;p&gt;姓名：李放&lt;/p&gt;
&lt;p&gt;性别：男&lt;/p&gt;
&lt;p&gt;出生日期：2000年10月15日&lt;/p&gt;
&lt;p&gt;籍贯：湖南省冷水江市山尖镇</summary>
      
    
    
    
    <category term="个人" scheme="http://example.com/categories/%E4%B8%AA%E4%BA%BA/"/>
    
    
    <category term="信息" scheme="http://example.com/tags/%E4%BF%A1%E6%81%AF/"/>
    
  </entry>
  
  <entry>
    <title>Unicorn之模拟调用so文件</title>
    <link href="http://example.com/2021/06/03/Unicorn/"/>
    <id>http://example.com/2021/06/03/Unicorn/</id>
    <published>2021-06-03T15:55:18.707Z</published>
    <updated>2021-06-04T08:15:03.577Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、Unicorn中的接口"><a href="#一、Unicorn中的接口" class="headerlink" title="一、Unicorn中的接口"></a>一、Unicorn中的接口</h3><h5 id="1、内存相关"><a href="#1、内存相关" class="headerlink" title="1、内存相关"></a>1、内存相关</h5><ul><li>  uc_mem_map</li><li>  uc_mem_write</li><li>  uc_mem_read</li></ul><h5 id="2、寄存器相关"><a href="#2、寄存器相关" class="headerlink" title="2、寄存器相关"></a>2、寄存器相关</h5><ul><li>  uc_reg_write</li><li>  uc_reg_read</li></ul><p><strong>TEST</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> unicorn</span><br><span class="line"><span class="keyword">import</span> capstone</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Test_Arm32_Thumb</span>():</span></span><br><span class="line">    <span class="comment">#硬编码</span></span><br><span class="line">    CODE = <span class="string">b&#x27;\x0a\x46\x03\x46&#x27;</span></span><br><span class="line">    <span class="comment">#基地址</span></span><br><span class="line">    ADDRESS = <span class="number">0x1000</span></span><br><span class="line">    <span class="comment">#映射大小</span></span><br><span class="line">    SIZE = <span class="number">1024</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#创建反汇编引擎对象</span></span><br><span class="line">    CP = capstone.Cs(capstone.CS_ARCH_ARM,capstone.CS_MODE_THUMB)</span><br><span class="line">    <span class="comment">#读取反汇编代码</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> CP.disasm(CODE,ADDRESS):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[addr:%X]:\t%s\t%s&quot;</span> % (i.address,i.mnemonic,i.op_str))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#创建虚拟机对象</span></span><br><span class="line">    mu = unicorn.Uc(unicorn.UC_ARCH_ARM,unicorn.UC_MODE_THUMB)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#映射内存</span></span><br><span class="line">    mu.mem_map(ADDRESS,SIZE)</span><br><span class="line">    <span class="comment">#往内存写入代码</span></span><br><span class="line">    mu.mem_write(ADDRESS,CODE)</span><br><span class="line">    <span class="comment">#读取指定内存地址，return：bytesarray</span></span><br><span class="line">    <span class="built_in">bytes</span> = mu.mem_read(ADDRESS,<span class="number">10</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;ADDRESS:%X,content:%s&quot;</span> % (ADDRESS,binascii.b2a_hex(<span class="built_in">bytes</span>)))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#写入寄存器的值。arg_1：寄存器表达值，宏定义</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    UC_ARM_REG_R0 = 66</span></span><br><span class="line"><span class="string">    UC_ARM_REG_R1 = 67</span></span><br><span class="line"><span class="string">    UC_ARM_REG_R2 = 68</span></span><br><span class="line"><span class="string">    UC_ARM_REG_R3 = 69</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    mu.reg_write(unicorn.arm_const.UC_ARM_REG_R1,<span class="number">0x100</span>)</span><br><span class="line">    mu.reg_write(unicorn.arm_const.UC_ARM_REG_R0,<span class="number">0x200</span>)</span><br><span class="line"></span><br><span class="line">    reg_R3 = mu.reg_read(unicorn.arm_const.UC_ARM_REG_R3)</span><br><span class="line">    reg_R2 = mu.reg_read(unicorn.arm_const.UC_ARM_REG_R2)</span><br><span class="line">    reg_R1 = mu.reg_read(unicorn.arm_const.UC_ARM_REG_R1)</span><br><span class="line">    reg_R0 = mu.reg_read(unicorn.arm_const.UC_ARM_REG_R0)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-------before-------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;reg_R0:%x&quot;</span> % (reg_R0))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;reg_R1:%x&quot;</span> % (reg_R1))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;reg_R3:%x&quot;</span> % (reg_R3))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;reg_R2:%x&quot;</span> % (reg_R2))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#启动虚拟机执行代码。arg_1：开始地址、arg_2：结束地址</span></span><br><span class="line">    mu.emu_start(ADDRESS + <span class="number">1</span>,ADDRESS + <span class="built_in">len</span>(CODE))   <span class="comment">#ADDRESS + 1 ：是因为是执行Thumb格式代码，指令首地址都是奇数（很重要）</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#读取寄存器的值。arg_1：寄存器表达值，宏定义</span></span><br><span class="line">    reg_R3 = mu.reg_read(unicorn.arm_const.UC_ARM_REG_R3)</span><br><span class="line">    reg_R2 = mu.reg_read(unicorn.arm_const.UC_ARM_REG_R2)</span><br><span class="line">    reg_R1 = mu.reg_read(unicorn.arm_const.UC_ARM_REG_R1)</span><br><span class="line">    reg_R0 = mu.reg_read(unicorn.arm_const.UC_ARM_REG_R0)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-------after-------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;reg_R0:%x&quot;</span> % (reg_R0))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;reg_R1:%x&quot;</span> % (reg_R1))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;reg_R3:%x&quot;</span> % (reg_R3))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;reg_R2:%x&quot;</span> % (reg_R2))</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    Test_Arm32_Thumb()</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">output:</span></span><br><span class="line"><span class="string">[addr:1000]:movr2, r1</span></span><br><span class="line"><span class="string">[addr:1002]:movr3, r0</span></span><br><span class="line"><span class="string">ADDRESS:1000,content:b&#x27;0a460346000000000000&#x27;</span></span><br><span class="line"><span class="string">-------before-------</span></span><br><span class="line"><span class="string">reg_R0:200</span></span><br><span class="line"><span class="string">reg_R1:100</span></span><br><span class="line"><span class="string">reg_R3:0</span></span><br><span class="line"><span class="string">reg_R2:0</span></span><br><span class="line"><span class="string">-------after-------</span></span><br><span class="line"><span class="string">reg_R0:200</span></span><br><span class="line"><span class="string">reg_R1:100</span></span><br><span class="line"><span class="string">reg_R3:200</span></span><br><span class="line"><span class="string">reg_R2:100</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="http://inews.gtimg.com/newsapp_ls/0/13610781004/0" alt="image-20210526101043331"></p><p><img src="http://inews.gtimg.com/newsapp_ls/0/13610791214/0" alt="image-20210604000033137"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;一、Unicorn中的接口&quot;&gt;&lt;a href=&quot;#一、Unicorn中的接口&quot; class=&quot;headerlink&quot; title=&quot;一、Unicorn中的接口&quot;&gt;&lt;/a&gt;一、Unicorn中的接口&lt;/h3&gt;&lt;h5 id=&quot;1、内存相关&quot;&gt;&lt;a href=&quot;#1、内</summary>
      
    
    
    
    <category term="Android" scheme="http://example.com/categories/Android/"/>
    
    
    <category term="安卓调试" scheme="http://example.com/tags/%E5%AE%89%E5%8D%93%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/06/03/hello-world/"/>
    <id>http://example.com/2021/06/03/hello-world/</id>
    <published>2021-06-03T15:44:08.997Z</published>
    <updated>2021-06-04T13:23:37.946Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
    <category term="111" scheme="http://example.com/tags/111/"/>
    
  </entry>
  
</feed>
